name: build-and-deploy-backend

on:
  push:
    branches: [ next-level ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./cv-magic-app/backend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-backend:latest
            ghcr.io/${{ github.repository }}-backend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/next-level' }}
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on VPS via SSH
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          DOMAIN: ${{ secrets.APP_DOMAIN }}
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GHCR_READ_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          ssh $VPS_USER@$VPS_HOST '
            set -e
            APP_DIR=/opt/cv-app
            sudo mkdir -p $APP_DIR/{deploy,env,data}
            sudo chown -R $USER:$USER $APP_DIR
            if [ ! -f "$APP_DIR/deploy/docker-compose.yml" ]; then
              cat > $APP_DIR/deploy/docker-compose.yml <<YAML
version: "3.9"
services:
  proxy:
    image: caddy:2
    ports: ["80:80","443:443"]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on: [ backend ]
    restart: unless-stopped

  backend:
    image: ghcr.io/${REPO}-backend:latest
    env_file: [ ../env/backend.env ]
    command: ["uvicorn","app.main:app","--host","0.0.0.0","--port","8000"]
    expose: ["8000"]
    volumes:
      - ../data:/app/backend/user
    restart: unless-stopped
YAML
            fi
            if [ ! -f "$APP_DIR/deploy/Caddyfile" ]; then
              cat > $APP_DIR/deploy/Caddyfile <<EOF
${DOMAIN:-cvagent.duckdns.org} {
    encode gzip
    reverse_proxy backend:8000
}
EOF
            fi
            cd $APP_DIR/deploy
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
            docker compose pull
            docker compose up -d --remove-orphans
          '
