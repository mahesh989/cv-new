Server starting at http://localhost:8000
INFO:     Will watch for changes in these directories: ['/Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [30334] using WatchFiles
No AI providers auto-configured - user must select provider and configure API keys via frontend
INFO:     Started server process [30366]
INFO:     Waiting for application startup.
2025-10-09 12:56:20,021 - app.main - INFO - 🚀 Starting CV Management API...
🔧 Development mode: JWT expiration set to 480 minutes
2025-10-09 12:56:20,412 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-10-09 12:56:20,412 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-09 12:56:20,412 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:56:20,412 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:56:20,453 INFO sqlalchemy.engine.Engine select current_schema()
2025-10-09 12:56:20,453 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-09 12:56:20,453 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:56:20,453 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:56:20,497 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-10-09 12:56:20,497 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-09 12:56:20,498 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:56:20,498 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:56:20,550 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:20,550 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:20,551 INFO sqlalchemy.engine.Engine SELECT 1
2025-10-09 12:56:20,551 - sqlalchemy.engine.Engine - INFO - SELECT 1
2025-10-09 12:56:20,551 INFO sqlalchemy.engine.Engine [generated in 0.00107s] {}
2025-10-09 12:56:20,551 - sqlalchemy.engine.Engine - INFO - [generated in 0.00107s] {}
2025-10-09 12:56:20,587 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:20,587 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:56:20,609 - app.database - INFO - Database connection successful
2025-10-09 12:56:20,610 - app.main - INFO - ✅ Database connection successful
2025-10-09 12:56:20,633 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:20,633 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:20,641 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,641 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,642 INFO sqlalchemy.engine.Engine [generated in 0.00126s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,642 - sqlalchemy.engine.Engine - INFO - [generated in 0.00126s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,703 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,703 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,704 INFO sqlalchemy.engine.Engine [cached since 0.06288s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,704 - sqlalchemy.engine.Engine - INFO - [cached since 0.06288s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,726 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,726 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,727 INFO sqlalchemy.engine.Engine [cached since 0.08601s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,727 - sqlalchemy.engine.Engine - INFO - [cached since 0.08601s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,750 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,750 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,751 INFO sqlalchemy.engine.Engine [cached since 0.11s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,751 - sqlalchemy.engine.Engine - INFO - [cached since 0.11s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,773 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,773 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,774 INFO sqlalchemy.engine.Engine [cached since 0.1332s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,774 - sqlalchemy.engine.Engine - INFO - [cached since 0.1332s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,800 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,800 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,800 INFO sqlalchemy.engine.Engine [cached since 0.1595s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,800 - sqlalchemy.engine.Engine - INFO - [cached since 0.1595s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,819 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,819 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,820 INFO sqlalchemy.engine.Engine [cached since 0.1787s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,820 - sqlalchemy.engine.Engine - INFO - [cached since 0.1787s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,842 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,842 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,843 INFO sqlalchemy.engine.Engine [cached since 0.2019s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,843 - sqlalchemy.engine.Engine - INFO - [cached since 0.2019s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,866 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,866 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,866 INFO sqlalchemy.engine.Engine [cached since 0.2251s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,866 - sqlalchemy.engine.Engine - INFO - [cached since 0.2251s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,889 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,889 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,889 INFO sqlalchemy.engine.Engine [cached since 0.2482s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,889 - sqlalchemy.engine.Engine - INFO - [cached since 0.2482s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,910 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,910 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:56:20,911 INFO sqlalchemy.engine.Engine [cached since 0.27s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,911 - sqlalchemy.engine.Engine - INFO - [cached since 0.27s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:56:20,935 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 12:56:20,935 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 12:56:20,957 - app.database - INFO - Database tables created successfully
2025-10-09 12:56:20,958 - app.main - INFO - ✅ Database tables ready
2025-10-09 12:56:20,958 - app.main - INFO - 🎯 API Server started successfully on 0.0.0.0:8000
2025-10-09 12:56:20,958 - app.main - INFO - ✅ User directories will be created on-demand during login
INFO:     Application startup complete.
INFO:     127.0.0.1:57332 - "OPTIONS /api/job/scrape HTTP/1.1" 200 OK
2025-10-09 12:56:34,947 - app.utils.directory_utils - ERROR - ❌ Failed to create cv-analysis directories: User email must be provided
INFO:     127.0.0.1:57334 - "POST /api/job/scrape HTTP/1.1" 200 OK
INFO:     127.0.0.1:57334 - "OPTIONS /api/job-analysis/extract-and-save HTTP/1.1" 200 OK
2025-10-09 12:56:37,112 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
🔍 Starting AI extraction with token: eyJhbGciOiJIUzI1NiIs...
2025-10-09 12:56:37,169 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:37,169 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:37,175 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider IS NULL 
 LIMIT %(param_1)s
2025-10-09 12:56:37,175 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider IS NULL 
 LIMIT %(param_1)s
2025-10-09 12:56:37,175 INFO sqlalchemy.engine.Engine [generated in 0.00069s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 12:56:37,175 - sqlalchemy.engine.Engine - INFO - [generated in 0.00069s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 12:56:37,215 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:37,215 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:56:37,232 - app.services.job_extraction_service - ERROR - AI service error: 
2025-10-09 12:56:37,300 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:56:37,301 - app.services.job_extraction_service - INFO - ♻️ [JOB_EXTRACTION] Job already exists in saved_jobs.json: Data Analyst at Australia for UNHCR
🔍 AI extraction result: {'error': 'AI service failed: '}
⚠️ AI extraction failed: AI service failed: 
⚠️ Using rule-based extraction as fallback
INFO:     127.0.0.1:57332 - "POST /api/job-analysis/extract-and-save HTTP/1.1" 200 OK
INFO:     127.0.0.1:57350 - "OPTIONS /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:57350 - "GET /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:57350 - "OPTIONS /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 12:56:43,880 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 12:56:43,881 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: []
2025-10-09 12:56:43,882 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 12:56:43,882 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {}
2025-10-09 12:56:43,882 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 12:56:43,883 - app.core.model_dependency - WARNING - ⚠️ Failed to switch to header model gpt-3.5-turbo
2025-10-09 12:56:43,891 - app.ai.ai_service - INFO - 🔄 Initializing AI providers for user munna@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
2025-10-09 12:56:43,918 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:43,918 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:43,928 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:43,928 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:43,929 INFO sqlalchemy.engine.Engine [generated in 0.00086s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 12:56:43,929 - sqlalchemy.engine.Engine - INFO - [generated in 0.00086s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 12:56:43,979 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:43,979 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:56:44,779 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 12:56:44,796 - app.ai.ai_service - INFO - ✅ Initialized openai provider with model gpt-4o for user munna@gmail.com
2025-10-09 12:56:44,822 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:44,822 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:44,823 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:44,823 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:44,823 INFO sqlalchemy.engine.Engine [cached since 0.8952s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 12:56:44,823 - sqlalchemy.engine.Engine - INFO - [cached since 0.8952s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 12:56:44,876 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:44,876 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:56:44,899 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user munna@gmail.com and provider anthropic
2025-10-09 12:56:44,916 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:44,916 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:44,916 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:44,916 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:44,917 INFO sqlalchemy.engine.Engine [cached since 0.9888s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 12:56:44,917 - sqlalchemy.engine.Engine - INFO - [cached since 0.9888s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 12:56:44,968 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:44,968 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:56:44,989 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user munna@gmail.com and provider deepseek
2025-10-09 12:56:45,006 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:56:45,006 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:56:45,010 INFO sqlalchemy.engine.Engine SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:45,010 - sqlalchemy.engine.Engine - INFO - SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 12:56:45,011 INFO sqlalchemy.engine.Engine [generated in 0.00071s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 12:56:45,011 - sqlalchemy.engine.Engine - INFO - [generated in 0.00071s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 12:56:45,050 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:56:45,050 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:57352 - "POST /api/preliminary-analysis HTTP/1.1" 400 Bad Request
INFO:     127.0.0.1:57400 - "OPTIONS /api/ai/chat HTTP/1.1" 200 OK
2025-10-09 12:58:04,253 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 12:58:04,253 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: ['openai']
2025-10-09 12:58:04,254 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 12:58:04,955 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 12:58:04,979 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {'openai': {'provider': 'openai', 'model': 'gpt-4o', 'available': True, 'api_key_configured': True, 'current_model': 'gpt-4o', 'is_current': False}}
2025-10-09 12:58:04,979 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 12:58:04,979 - app.ai.ai_service - INFO - 🔄 Available providers: ['openai']
2025-10-09 12:58:04,979 - app.ai.ai_service - INFO - ✅ Switched to openai provider with model gpt-3.5-turbo
2025-10-09 12:58:04,980 - app.core.model_dependency - INFO - 🔄 Switched to model from header: gpt-3.5-turbo
2025-10-09 12:58:04,980 - app.routes.ai - INFO - 🟢 [AI_CHAT] user=munna@gmail.com provider=openai model=gpt-3.5-turbo
2025-10-09 12:58:04,980 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:05,772 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
INFO:     127.0.0.1:57400 - "POST /api/ai/chat HTTP/1.1" 200 OK
INFO:     127.0.0.1:57400 - "GET /api/preliminary-analysis/cache HTTP/1.1" 200 OK
2025-10-09 12:58:08,439 - app.ai.ai_service - INFO - ✅ Switched to model gpt-3.5-turbo
2025-10-09 12:58:08,439 - app.core.model_dependency - INFO - 🔄 Switched to model from header: gpt-3.5-turbo
2025-10-09 12:58:08,441 - app.routes.skills_analysis - INFO - 🎯 Preliminary analysis request: CV=maheshwor_tiwari.pdf, JD_length=6014, CONFIG=None
2025-10-09 12:58:08,442 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:08,443 - app.routes.skills_analysis - INFO - 🏢 Extracted company name: Australia_for_UNHCR
2025-10-09 12:58:08,444 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:08,447 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:08,448 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:08,449 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:08,450 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:08,452 - app.routes.skills_analysis - INFO - 🔗 [PRELIM_ANALYSIS] JD URL (latest job_info): https://www.ethicaljobs.com.au/members/australiaforunhcr/data-analyst
2025-10-09 12:58:08,456 - app.routes.skills_analysis - INFO - 📄 [PRELIM_ANALYSIS] Latest CV selected → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:08,459 - app.routes.skills_analysis - INFO - 🧪 [PRELIM_ANALYSIS] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 12:58:08,459 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 12:58:08,459 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 12:58:08,460 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 12:58:08,460 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Starting AI-powered skills analysis for maheshwor_tiwari.pdf
2025-10-09 12:58:08,460 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] CV content length: 670 chars
2025-10-09 12:58:08,460 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] JD content length: 6014 chars
2025-10-09 12:58:08,460 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using config: default
2025-10-09 12:58:08,461 - app.routes.skills_analysis - INFO - 🧪 [SKILLS_ANALYSIS] CV preview: 'Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data'
2025-10-09 12:58:08,461 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI provider: openai
2025-10-09 12:58:08,461 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI model: gpt-3.5-turbo
2025-10-09 12:58:08,461 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Provider available: True
2025-10-09 12:58:08,462 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Model from header: gpt-3.5-turbo
2025-10-09 12:58:08,463 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting CV skills with detailed structured analysis...
2025-10-09 12:58:08,463 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:09,805 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:09,810 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Starting response parsing...
2025-10-09 12:58:09,810 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Raw response preview: 
**SOFT SKILLS:**
- Analytical
- Stakeholder Management
- Results-Driven

**TECHNICAL SKILLS:**
- SQL
- Python
- Excel
- Power BI
- VBA
- Data Warehouse
- Data Extraction
- Data Analysis
- Business Intelligence

**DOMAIN KEYWORDS:**
- N/A...
2025-10-09 12:58:09,811 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] FULL CV RESPONSE: 
**SOFT SKILLS:**
- Analytical
- Stakeholder Management
- Results-Driven

**TECHNICAL SKILLS:**
- SQL
- Python
- Excel
- Power BI
- VBA
- Data Warehouse
- Data Extraction
- Data Analysis
- Business Intelligence

**DOMAIN KEYWORDS:**
- N/A
2025-10-09 12:58:09,811 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No SOFT_SKILLS variable found in response
2025-10-09 12:58:09,812 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No TECHNICAL_SKILLS variable found in response
2025-10-09 12:58:09,812 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No DOMAIN_KEYWORDS variable found in response
2025-10-09 12:58:09,812 - app.services.skill_extraction.response_parser - INFO - 🔄 [CV] Python format not found, trying markdown format...
2025-10-09 12:58:09,814 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Successfully extracted 13 total skills using multi-format parser
2025-10-09 12:58:09,814 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated soft_skills: 3 valid skills
2025-10-09 12:58:09,814 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated technical_skills: 9 valid skills
2025-10-09 12:58:09,814 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated domain_keywords: 1 valid skills
2025-10-09 12:58:09,815 - app.services.skill_extraction.response_parser - INFO - 📊 [CV] Parsing completed:
2025-10-09 12:58:09,815 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (3): ['Analytical', 'Stakeholder Management', 'Results-Driven']
2025-10-09 12:58:09,815 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (9): ['SQL', 'Python', 'Excel']...
2025-10-09 12:58:09,815 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (1): ['N/A']
2025-10-09 12:58:09,815 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting JD skills with detailed structured analysis...
2025-10-09 12:58:09,815 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:12,733 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:12,736 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Starting response parsing...
2025-10-09 12:58:12,736 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Raw response preview: ## SOFT SKILLS:
- Communication
- Leadership
- Teamwork
- Collaboration
- Negotiation
- Time Management
- Organization
- Adaptability
- Problem-solving
- Analytical Thinking
- Critical Thinking
- Creativity
- Innovation
- Detail-oriented
- Self-motivated
- Proactive
- Results-driven

## TECHNICAL SKILLS:
- SQL
- Excel
- VBA
- Data Mining
- Data Analysis
- Power BI
- Tableau
- Database Management
- Business Intelligence
- Data Warehousing
- Project Management

## DOMAIN KEYWORDS:
- Fundraising
- ...
2025-10-09 12:58:12,737 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Successfully extracted 40 total skills using multi-format parser
2025-10-09 12:58:12,738 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated soft_skills: 17 valid skills
2025-10-09 12:58:12,739 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated technical_skills: 11 valid skills
2025-10-09 12:58:12,740 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated domain_keywords: 12 valid skills
2025-10-09 12:58:12,740 - app.services.skill_extraction.response_parser - INFO - 📊 [JD] Parsing completed:
2025-10-09 12:58:12,740 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (17): ['Communication', 'Leadership', 'Teamwork']...
2025-10-09 12:58:12,741 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (11): ['SQL', 'Excel', 'VBA']...
2025-10-09 12:58:12,741 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (12): ['Fundraising', 'Business Intelligence', 'Data Selection']...
2025-10-09 12:58:12,742 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using structured analysis as comprehensive analysis...
2025-10-09 12:58:12,743 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Technical Skills (9): ['SQL', 'Python', 'Excel', 'Power BI', 'VBA', 'Data Warehouse', 'Data Extraction', 'Data Analysis', 'Business Intelligence']
2025-10-09 12:58:12,743 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Soft Skills (3): ['Analytical', 'Stakeholder Management', 'Results-Driven']
2025-10-09 12:58:12,744 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Domain Keywords (1): ['N/A']
2025-10-09 12:58:12,744 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Technical Skills (11): ['SQL', 'Excel', 'VBA', 'Data Mining', 'Data Analysis', 'Power BI', 'Tableau', 'Database Management', 'Business Intelligence', 'Data Warehousing', 'Project Management']
2025-10-09 12:58:12,744 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Soft Skills (17): ['Communication', 'Leadership', 'Teamwork', 'Collaboration', 'Negotiation', 'Time Management', 'Organization', 'Adaptability', 'Problem-solving', 'Analytical Thinking', 'Critical Thinking', 'Creativity', 'Innovation', 'Detail-oriented', 'Self-motivated', 'Proactive', 'Results-driven']
2025-10-09 12:58:12,744 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Domain Keywords (12): ['Fundraising', 'Business Intelligence', 'Data Selection', 'Data Segmentation', 'Direct Marketing', 'Stakeholder Management', 'Data Warehouse', 'Data Extraction', 'Campaign Optimization', 'Communication Data', 'Data Governance', 'Clean Data Maintenance']
2025-10-09 12:58:12,744 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] Analysis completed successfully
2025-10-09 12:58:12,745 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 12:58:12,745 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:12,745 - app.services.skill_extraction.result_saver - INFO - 📁 Result saver initialized with base directory: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:12,746 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:12,746 - app.routes.skills_analysis - INFO - 🔍 [COMPANY_DETECTION] Looking in: user/munna@gmail.com/cv-analysis/applied_companies
2025-10-09 12:58:12,746 - app.routes.skills_analysis - INFO - 📁 [COMPANY_DETECTION] Found company folder: Australia_for_UNHCR with 5 job_info files
2025-10-09 12:58:12,747 - app.routes.skills_analysis - INFO - 🏢 [COMPANY_DETECTION] Using most recent company folder: Australia_for_UNHCR
2025-10-09 12:58:12,747 - app.routes.skills_analysis - INFO - 📋 [COMPANY_DETECTION] Job info company: Australia for UNHCR
2025-10-09 12:58:12,748 - app.services.skill_extraction.result_saver - INFO - 🏢 Using provided company name: Australia_for_UNHCR -> Australia_for_UNHCR
2025-10-09 12:58:12,748 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:12,749 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:12,749 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:12,750 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV already exists, preserving it: user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 12:58:12,750 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV preserved, skipping save: user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 12:58:12,752 - app.services.skill_extraction.result_saver - INFO - 💾 Analysis results saved (JSON) to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:12,752 - app.routes.skills_analysis - INFO - 📁 [FILE_SAVE] Results saved to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:12,752 - app.routes.skills_analysis - INFO - 🔍 [ANALYZE_MATCH] Starting analyze match assessment...
2025-10-09 12:58:12,758 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:17,034 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:17,037 - app.routes.skills_analysis - INFO - ✅ [ANALYZE_MATCH] Analysis completed (length: 1809 chars)
2025-10-09 12:58:17,038 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:17,042 - app.services.skill_extraction.result_saver - INFO - 📂 Found existing analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:17,042 - app.services.skill_extraction.result_saver - INFO - 🔍 Looking for analysis file in: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 12:58:17,043 - app.services.skill_extraction.result_saver - INFO - 📄 Using existing file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:17,044 - app.services.skill_extraction.result_saver - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:17,044 - app.routes.skills_analysis - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:17,045 - app.routes.skills_analysis - INFO - 🔍 [PREEXTRACTED_COMPARISON] Starting pre-extracted skills semantic comparison...
2025-10-09 12:58:17,048 - app.services.skill_extraction.preextracted_comparator - INFO - 🔍 [EXACT_MATCHES] Found 3 exact matches: {'technical_skills': [{'jd_skill': 'Business Intelligence', 'cv_skill': 'Business Intelligence', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Data Analysis', 'cv_skill': 'Data Analysis', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Excel', 'cv_skill': 'Excel', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Power BI', 'cv_skill': 'Power BI', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'SQL', 'cv_skill': 'SQL', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'VBA', 'cv_skill': 'VBA', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'soft_skills': [{'jd_skill': 'Results-driven', 'cv_skill': 'Results-Driven', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'domain_keywords': []}
2025-10-09 12:58:17,049 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:25,242 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:25,252 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] technical_skills: matched 11 > CV count 9
2025-10-09 12:58:25,252 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] technical_skills: matched 11 + missing 1 = 12 vs JD count 11 (acceptable variance)
2025-10-09 12:58:25,252 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] soft_skills: matched 3 + missing 15 = 18 vs JD count 17 (acceptable variance)
2025-10-09 12:58:25,252 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] domain_keywords: matched 10 > CV count 1
2025-10-09 12:58:25,253 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] domain_keywords: matched 10 + missing 0 = 10 vs JD count 12 (acceptable variance)
2025-10-09 12:58:25,253 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=9, Soft=3, Domain=1
2025-10-09 12:58:25,253 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=11, Soft=17, Domain=12
2025-10-09 12:58:25,253 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] 2 validation error(s) found
2025-10-09 12:58:25,253 - app.services.skill_extraction.preextracted_comparator - WARNING - ⚠️ [COMPARISON] JSON results failed validation, attempting to fix inconsistencies
2025-10-09 12:58:25,254 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] Attempting to fix inconsistent AI response
2025-10-09 12:58:25,254 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] technical_skills: Trimming 11 matches to 9 (CV limit)
2025-10-09 12:58:25,254 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] technical_skills: Too many items (12 > 11), trimming missing items
2025-10-09 12:58:25,254 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] soft_skills: Too many items (18 > 17), trimming missing items
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] domain_keywords: Trimming 10 matches to 1 (CV limit)
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] domain_keywords: Adding 2 missing JD skills
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [FIX] Finished fixing AI response inconsistencies
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=9, Soft=3, Domain=1
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=11, Soft=17, Domain=12
2025-10-09 12:58:25,255 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [VALIDATION] Comparison results passed validation
2025-10-09 12:58:25,256 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [COMPARISON] Successfully fixed AI response inconsistencies
2025-10-09 12:58:25,256 - app.routes.skills_analysis - INFO - ✅ [PREEXTRACTED_COMPARISON] Completed (length: 5090 chars)
2025-10-09 12:58:25,256 - app.services.skill_extraction.result_saver - INFO - 🏢 [PREEXTRACTED_COMPARISON] Inferred company from saved_file_path: Australia_for_UNHCR
2025-10-09 12:58:25,260 - app.services.skill_extraction.result_saver - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:25,260 - app.routes.skills_analysis - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:25,261 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:25,262 - app.routes.skills_analysis - INFO - ♻️ [PIPELINE] (preliminary-analysis) JD file already exists: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_125637.json
2025-10-09 12:58:25,265 - app.routes.skills_analysis - INFO - ♻️ [JOBS] Job already exists in saved_jobs.json: Data Analyst at Australia for UNHCR
2025-10-09 12:58:25,265 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] (preliminary-analysis) scheduling for company: Australia_for_UNHCR
2025-10-09 12:58:25,266 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] Scheduling JD analysis and CV–JD matching for 'Australia_for_UNHCR'...
2025-10-09 12:58:25,267 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:25,268 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting JD analysis for Australia_for_UNHCR (force_refresh=True)
2025-10-09 12:58:25,268 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:25,269 - app.services.jd_analysis.jd_analyzer - INFO - 🔄 Analyzing JD for Australia_for_UNHCR (force_refresh=True)
2025-10-09 12:58:25,270 - app.services.jd_analysis.jd_analyzer - INFO - 📄 Analyzing JD file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_125637.json
2025-10-09 12:58:25,271 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:27,043 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:27,056 - app.services.jd_analysis.jd_analyzer - INFO - ✅ JD analysis completed. Found 0 required and 0 preferred keywords
2025-10-09 12:58:27,062 - app.services.jd_analysis.jd_analyzer - INFO - ♻️ JD analysis already exists, reusing: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251008_201603.json
2025-10-09 12:58:27,062 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] JD analysis saved for Australia_for_UNHCR at: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251008_201603.json
2025-10-09 12:58:27,066 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:27,067 - app.services.jd_usage_tracker - ERROR - ❌ [JD_TRACKER] Error recording JD usage: Either jd_url or jd_text must be provided
2025-10-09 12:58:27,067 - app.routes.skills_analysis - INFO - 📝 [PIPELINE] JD usage recorded for Australia_for_UNHCR
2025-10-09 12:58:27,067 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting CV–JD matching for Australia_for_UNHCR
2025-10-09 12:58:27,068 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:27,070 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:27,070 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:27,071 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:27,073 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] CV–JD matching will use CV TXT: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:27,073 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Using provided CV path: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:27,075 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Read CV from: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:27,077 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🧪 [CV_JD_MATCHER] CV content length=668, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 12:58:27,077 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🔍 Found 8 required and 5 preferred keywords
2025-10-09 12:58:27,078 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:30,449 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:30,451 - app.services.cv_jd_matching.cv_jd_matcher - INFO - ✅ CV-JD matching completed. Found 6 matched required keywords
2025-10-09 12:58:30,452 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,454 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,456 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 💾 Saved CV-JD match results to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_125830.json
2025-10-09 12:58:30,457 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] CV–JD match results saved for Australia_for_UNHCR
2025-10-09 12:58:30,457 - app.routes.skills_analysis - INFO - 🔍 [PIPELINE] Starting component analysis for Australia_for_UNHCR
2025-10-09 12:58:30,461 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,462 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,463 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,464 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:30,465 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Latest CV selected → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:30,467 - app.routes.skills_analysis - INFO - 🧪 [PIPELINE] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 12:58:30,467 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:30,469 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Required files found, proceeding with component analysis
2025-10-09 12:58:30,469 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Starting component analysis for: Australia_for_UNHCR =====
2025-10-09 12:58:30,469 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Starting component assembly for: Australia_for_UNHCR =====
2025-10-09 12:58:30,470 - app.services.ats.component_assembler - INFO - 📄 [ASSEMBLER] Using CV text provided by caller
2025-10-09 12:58:30,476 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Match results not found: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/cv_jd_match_results.json
2025-10-09 12:58:30,477 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting parallel component analyses...
2025-10-09 12:58:30,478 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Requesting skills relevance analysis...
2025-10-09 12:58:30,479 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:30,500 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus using match file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_125830.json
2025-10-09 12:58:30,508 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Using existing match_counts from file
2025-10-09 12:58:30,509 - app.services.ats.requirement_bonus_calculator - INFO - [ATS][BONUS] required_total=8 matched_required=6 missing_required=2 required_bonus=3.00 required_penalty=-1.50 preferred_total=5 matched_preferred=0 missing_preferred=5 preferred_bonus=0.00 preferred_penalty=-0.75 total_bonus=0.75
2025-10-09 12:58:30,510 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus calculated: 0.75 points
2025-10-09 12:58:37,926 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:37,933 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response length: 4069
2025-10-09 12:58:37,933 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response preview: {
 "skills_analysis": [
  {
   "skill": "SQL",
   "cv_evidence": "Proficient in SQL",
   "jd_application": "Addressing data extract requirements for direct marketing campaigns, manipulating data for b
2025-10-09 12:58:37,934 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Cleaned response: {
 "skills_analysis": [
  {
   "skill": "SQL",
   "cv_evidence": "Proficient in SQL",
   "jd_application": "Addressing data extract requirements for direct marketing campaigns, manipulating data for b
2025-10-09 12:58:37,935 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Direct parse successful
2025-10-09 12:58:37,935 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Analysis completed. Score: 78.0
2025-10-09 12:58:37,935 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Requesting experience alignment analysis...
2025-10-09 12:58:37,936 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:40,995 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:40,997 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Analysis completed. Score: 75.0
2025-10-09 12:58:40,998 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Requesting industry fit analysis...
2025-10-09 12:58:40,998 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:44,681 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:44,684 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Analysis completed. Score: 60.0
2025-10-09 12:58:44,691 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Requesting role seniority analysis...
2025-10-09 12:58:44,691 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:47,344 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:47,353 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Analysis completed. Score: 40.0
2025-10-09 12:58:47,354 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Requesting technical depth analysis...
2025-10-09 12:58:47,355 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 12:58:50,474 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:50,477 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Analysis completed. Score: 90.0
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
📄 [UNIFIED] Reading CV content from: txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
🧪 [UNIFIED] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
📄 [UNIFIED] Reading CV content from: txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
🧪 [UNIFIED] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
INFO:     127.0.0.1:57400 - "POST /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 12:58:50,478 - app.services.ats.component_assembler - INFO - [ASSEMBLER] All component analyses completed successfully
2025-10-09 12:58:50,479 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Validating cross-analyzer consistency...
2025-10-09 12:58:50,479 - app.services.ats.components.consistency_validator - ERROR - [CONSISTENCY] Validation failed: unsupported operand type(s) for -: 'str' and 'int'
2025-10-09 12:58:50,479 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Inconsistencies detected in analysis results
2025-10-09 12:58:50,479 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Confidence score: 100%
2025-10-09 12:58:50,484 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Results saved to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:58:50,484 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting ATS score calculation...
2025-10-09 12:58:50,485 - app.services.ats.ats_score_calculator - INFO - [ATS] Starting comprehensive ATS score calculation
2025-10-09 12:58:50,486 - app.services.ats.ats_score_calculator - INFO - [ATS] Match rates - Tech: 82.0%, Domain: 8.0%, Soft: 18.0%
2025-10-09 12:58:50,487 - app.services.ats.ats_score_calculator - INFO - [ATS] Missing counts - Tech: 2, Domain: 11, Soft: 14
2025-10-09 12:58:50,487 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 1 - Tech: 16.4, Domain: 0.4, Soft: 2.7, Total: 19.5
2025-10-09 12:58:50,487 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 2 - Core: 15.9, Exp: 5.4, Potential: 6.0, Company: 0.8, Total: 28.1
2025-10-09 12:58:50,488 - app.services.ats.ats_score_calculator - INFO - [ATS] Final ATS Score: 48.3/100 (❌ Poor fit)
2025-10-09 12:58:50,492 - app.services.ats.component_assembler - INFO - [ASSEMBLER] ATS calculation completed. Score: 48.3/100 (❌ Poor fit)
2025-10-09 12:58:50,492 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,494 - app.services.ats_recommendation_service - INFO - Final ATS Score: 48.33749999999999
2025-10-09 12:58:50,494 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 12:58:50,495 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 12:58:50,499 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json
2025-10-09 12:58:50,518 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:58:50,518 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:58:50,525 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:50,525 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:50,526 INFO sqlalchemy.engine.Engine [generated in 0.00143s] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:50,526 - sqlalchemy.engine.Engine - INFO - [generated in 0.00143s] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:50,576 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:50,576 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:50,577 INFO sqlalchemy.engine.Engine [generated in 0.00054s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:50,577 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:50,607 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:50,607 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:50,608 INFO sqlalchemy.engine.Engine [generated in 0.00088s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_size': 24313, 'sha256': '3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe', 'timestamp': '20251009_125850'}
2025-10-09 12:58:50,608 - sqlalchemy.engine.Engine - INFO - [generated in 0.00088s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_size': 24313, 'sha256': '3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe', 'timestamp': '20251009_125850'}
2025-10-09 12:58:50,636 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 12:58:50,636 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 12:58:50,636 INFO sqlalchemy.engine.Engine [generated in 0.00068s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 153}
2025-10-09 12:58:50,636 - sqlalchemy.engine.Engine - INFO - [generated in 0.00068s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 153}
2025-10-09 12:58:50,661 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 12:58:50,661 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 12:58:50,683 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 12:58:50,683 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 12:58:50,684 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,684 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 12:58:50,684 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Recommendation file created for Australia_for_UNHCR
2025-10-09 12:58:50,685 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Completed assembly. Scores: skills=78.0 exp=75.0 industry=60.0 seniority=40.0 tech=90.0 =====
2025-10-09 12:58:50,685 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Component analysis completed for: Australia_for_UNHCR =====
2025-10-09 12:58:50,685 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Component analysis completed for Australia_for_UNHCR
2025-10-09 12:58:50,685 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] Component scores extracted: 23 scores
2025-10-09 12:58:50,685 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] skills_relevance: 78.0
2025-10-09 12:58:50,686 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] experience_alignment: 75.0
2025-10-09 12:58:50,686 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] industry_fit: 60.0
2025-10-09 12:58:50,687 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] role_seniority: 40.0
2025-10-09 12:58:50,687 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] technical_depth: 90.0
2025-10-09 12:58:50,687 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] ATS Score calculated: 48.33749999999999
2025-10-09 12:58:50,688 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Creating input recommendation file for Australia_for_UNHCR
2025-10-09 12:58:50,688 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,692 - app.services.ats_recommendation_service - INFO - Final ATS Score: 48.33749999999999
2025-10-09 12:58:50,692 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 12:58:50,693 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 12:58:50,697 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json
2025-10-09 12:58:50,716 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:58:50,716 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:58:50,717 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:50,717 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:50,717 INFO sqlalchemy.engine.Engine [cached since 0.1928s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:50,717 - sqlalchemy.engine.Engine - INFO - [cached since 0.1928s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:50,756 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:50,756 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:50,756 INFO sqlalchemy.engine.Engine [cached since 0.1804s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:50,756 - sqlalchemy.engine.Engine - INFO - [cached since 0.1804s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:50,780 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:50,780 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:50,781 INFO sqlalchemy.engine.Engine [cached since 0.1736s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_size': 24313, 'sha256': '3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe', 'timestamp': '20251009_125850'}
2025-10-09 12:58:50,781 - sqlalchemy.engine.Engine - INFO - [cached since 0.1736s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_size': 24313, 'sha256': '3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe', 'timestamp': '20251009_125850'}
2025-10-09 12:58:50,811 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:58:50,811 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:58:50,829 - app.services.ats_recommendation_service - WARNING - ⚠️ [DB] Failed to register input recommendation: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "uq_company_files_dedupe"
DETAIL:  Key (user_id, company_id, file_type, sha256)=(4df52e53-b78f-45e9-8946-3b6c00618693, 12, input_recommendation, 3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe) already exists.

[SQL: INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at]
[parameters: {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_125850.json', 'file_size': 24313, 'sha256': '3d0b4258b95217f1fbbec226f05fdaddc462a51f603ea6fdde5d3b1c6e0883fe', 'timestamp': '20251009_125850'}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-10-09 12:58:50,830 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 12:58:50,830 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 12:58:50,830 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,831 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 12:58:50,831 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Input recommendation file created for Australia_for_UNHCR
2025-10-09 12:58:50,831 - app.routes.skills_analysis - INFO - 🤖 [PIPELINE] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 12:58:50,831 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,832 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 12:58:50,838 - app.services.ai_recommendation_generator - INFO - 🟡 [AI GENERATOR] Input recommendation is newer (ai_mtime=1759973956.0993197, input_mtime=1759975130.6967998); regenerating AI recommendation
2025-10-09 12:58:50,839 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,840 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:50,842 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:50,846 - app.services.ai_recommendation_generator - ERROR - ❌ [AI GENERATOR] Error checking CV freshness: 'str' object has no attribute 'timestamp'
2025-10-09 12:58:50,848 - app.services.ai_recommendation_generator - INFO - 📋 [AI GENERATOR] Generated AI prompt for Australia_for_UNHCR using centralized template (11802 characters)
2025-10-09 12:58:50,849 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] Executing AI prompt for Australia_for_UNHCR
2025-10-09 12:58:50,849 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
WARNING:  WatchFiles detected changes in 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py'. Reloading...
2025-10-09 12:58:59,018 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 12:58:59,022 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] AI response generated - Provider: openai, Model: gpt-3.5-turbo
2025-10-09 12:58:59,023 - app.services.ai_recommendation_generator - INFO - 💰 [AI GENERATOR] Cost: $0.0044, Tokens: 3392
2025-10-09 12:58:59,024 - app.services.ai_recommendation_generator - INFO - 💾 [AI GENERATOR] Saved AI recommendation: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json (3.8KB)
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 12:58:59,042 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:58:59,042 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:58:59,042 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:59,042 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 12:58:59,043 INFO sqlalchemy.engine.Engine [cached since 8.519s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:59,043 - sqlalchemy.engine.Engine - INFO - [cached since 8.519s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 12:58:59,086 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:59,086 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 12:58:59,086 INFO sqlalchemy.engine.Engine [cached since 8.511s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:59,086 - sqlalchemy.engine.Engine - INFO - [cached since 8.511s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 12:58:59,112 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:59,112 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 12:58:59,113 INFO sqlalchemy.engine.Engine [cached since 8.506s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_125859.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json', 'file_size': 3867, 'sha256': 'ebd0e6df7e63d53f0dfa1b6ddcde6fae04a040695f1e7acac5306b3cdccb9ce4', 'timestamp': '20251009_125859'}
2025-10-09 12:58:59,113 - sqlalchemy.engine.Engine - INFO - [cached since 8.506s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_125859.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json', 'file_size': 3867, 'sha256': 'ebd0e6df7e63d53f0dfa1b6ddcde6fae04a040695f1e7acac5306b3cdccb9ce4', 'timestamp': '20251009_125859'}
2025-10-09 12:58:59,145 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 12:58:59,145 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 12:58:59,146 INFO sqlalchemy.engine.Engine [cached since 8.511s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 155}
2025-10-09 12:58:59,146 - sqlalchemy.engine.Engine - INFO - [cached since 8.511s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 155}
2025-10-09 12:58:59,169 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 12:58:59,169 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 12:58:59,191 - app.services.ai_recommendation_generator - INFO - ✅ [AI GENERATOR] AI recommendation generated and saved for Australia_for_UNHCR
2025-10-09 12:58:59,191 - app.services.ai_recommendation_generator - INFO - 📄 File: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_123916.json
2025-10-09 12:58:59,192 - app.services.ai_recommendation_generator - INFO - 💰 Cost: $0.0044
2025-10-09 12:58:59,192 - app.services.ai_recommendation_generator - INFO - 🔤 Tokens: 3392
2025-10-09 12:58:59,192 - app.services.ai_recommendation_generator - INFO - 🚀 [AI GENERATOR] Starting automatic CV tailoring for Australia_for_UNHCR
2025-10-09 12:58:59,193 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:59,195 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 12:58:59,196 - app.tailored_cv.services.cv_tailoring_service - INFO - Loading real data for Australia_for_UNHCR
2025-10-09 12:58:59,196 - app.tailored_cv.services.cv_tailoring_service - INFO - Company folder: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 12:58:59,196 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:59,196 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:59,197 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 12:58:59,198 - app.tailored_cv.services.cv_tailoring_service - INFO - 📄 [TAILORING] Using latest CV via unified selector → type=tailored, ts=20251009_115547, path=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 12:58:59,198 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Loading CV from user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 12:58:59,199 - app.tailored_cv.services.cv_tailoring_service - INFO - - First 200 chars: {   "contact": {     "name": "Maheshwor Tiwari",     "phone": "0414 032 507",     "email": "maheshtwari99@gmail.com",     "linkedin": "",     "location": "Hurstville, NSW, 2220",     "website": ""   }
2025-10-09 12:58:59,200 - app.tailored_cv.services.recommendation_parser - INFO - 📂 Loading CV from: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 12:58:59,201 - app.tailored_cv.services.recommendation_parser - INFO - 📋 CV format check:
2025-10-09 12:58:59,202 - app.tailored_cv.services.recommendation_parser - INFO -   - Top-level keys: ['contact', 'education', 'experience', 'projects', 'skills', 'created_at', 'last_edited', 'manually_edited']
2025-10-09 12:58:59,202 - app.tailored_cv.services.recommendation_parser - INFO -   - Has metadata: False
2025-10-09 12:58:59,202 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Detected tailored structured CV format (contact/experience/skills)
2025-10-09 12:58:59,203 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Successfully normalized tailored structured CV
2025-10-09 12:58:59,203 - app.tailored_cv.services.cv_tailoring_service - INFO - - Parsed CV data keys: ['contact', 'education', 'experience', 'skills', 'projects']
2025-10-09 12:58:59,203 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔄 Converting skills from List[str] to List[SkillCategory]
2025-10-09 12:58:59,204 - app.tailored_cv.services.cv_tailoring_service - INFO - - Final CV object attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 12:58:59,213 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Parsed recommendation for Australia_for_UNHCR
2025-10-09 12:58:59,214 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded real CV and recommendation for Australia_for_UNHCR
2025-10-09 12:58:59,214 - app.tailored_cv.services.cv_tailoring_service - INFO - 🎯 Starting CV tailoring for Australia_for_UNHCR - Senior Data Analyst
2025-10-09 12:58:59,214 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Validating CV structure:
2025-10-09 12:58:59,214 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV object type: <class 'app.tailored_cv.models.cv_models.OriginalCV'>
2025-10-09 12:58:59,215 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 12:58:59,215 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV data: {
  "contact": {
    "name": "Maheshwor Tiwari",
    "phone": "0414 032 507",
    "email": "maheshtwari99@gmail.com",
    "linkedin": "",
    "location": "Hurstville, NSW, 2220",
    "website": ""
  },
  "education": [],
  "experience": [
    {
      "company": "The Bitrates",
      "title": "Data Analyst",
      "location": "The Bitrates, Sydney, New South Wales, Australia",
      "start_date": "Jul 2024",
      "end_date": "Present",
      "duration": null,
      "bullets": [
        "Designed and implemented 5 Python scripts for data cleaning and preprocessing, improving data pipeline efficiency by 30% and processing 100K records weekly.",
        "Developed 5 machine learning models in Python for predictive analytics, enabling datadriven business decisions and increasing accuracy by 20%."
      ],
      "skills_used": null
    }
  ],
  "projects": [],
  "skills": [
    {
      "category": "Technical Skills",
      "skills": [
        "SQL",
        "Python",
        "Excel",
        "Power BI",
        "VBA",
        "Analytical",
        "Stakeholder Management",
        "Data Warehouse",
        "Data Extraction",
        "Data Analysis",
        "Business Intelligence",
        "ResultsDriven"
      ]
    }
  ],
  "experience_level": null,
  "total_years_experience": null,
  "created_at": null,
  "updated_at": null
}
2025-10-09 12:58:59,215 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] 🎯 Starting CV tailoring for Australia_for_UNHCR with strategy: education_first
2025-10-09 12:58:59,216 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] Initial stats:
2025-10-09 12:58:59,216 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - Experience entries: 1
2025-10-09 12:58:59,216 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - Total bullets: 2
2025-10-09 12:58:59,217 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - Skills categories: 1
2025-10-09 12:58:59,217 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - Total skills: 12
2025-10-09 12:58:59,217 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] Critical gaps to address: Business Intelligence, Data Warehouse, Data Extraction, Analytical Models, Analytical
2025-10-09 12:58:59,218 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] Technical enhancements needed: 
2025-10-09 12:58:59,219 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] 🤖 Generating tailored CV using AI service...
2025-10-09 12:58:59,220 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] Attempt 1/5 with temp=0.0
2025-10-09 12:58:59,220 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - System prompt length: 10574
2025-10-09 12:58:59,220 - app.tailored_cv.services.cv_tailoring_service - INFO - [67929d3c] - User prompt length: 6840
2025-10-09 12:58:59,220 - app.tailored_cv.services.cv_tailoring_service - ERROR - ❌ CV tailoring failed: generate_response() missing 1 required positional argument: 'user'
2025-10-09 12:58:59,221 - app.services.ai_recommendation_generator - ERROR - ❌ [AI GENERATOR] Error during automatic CV tailoring for Australia_for_UNHCR: CV tailoring process failed: generate_response() missing 1 required positional argument: 'user'
2025-10-09 12:58:59,221 - app.services.ai_recommendation_generator - WARNING - ⚠️ [AI GENERATOR] CV tailoring failed for Australia_for_UNHCR
2025-10-09 12:58:59,222 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] AI recommendation generated for Australia_for_UNHCR
2025-10-09 12:58:59,222 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] Starting tailored CV generation for Australia_for_UNHCR
2025-10-09 12:58:59,222 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:59,223 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 12:58:59,223 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:58:59,224 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Found AI recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json
2025-10-09 12:58:59,225 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Tailored CV found: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.txt
2025-10-09 12:58:59,225 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Pipeline summary for Australia_for_UNHCR:
2025-10-09 12:58:59,225 - app.routes.skills_analysis - INFO -    ✅ Successful: ['jd_analysis', 'cv_jd_matching', 'component_analysis', 'input_recommendation', 'ai_recommendation', 'tailored_cv']
2025-10-09 12:58:59,225 - app.routes.skills_analysis - INFO -    🎉 All steps completed successfully!
2025-10-09 12:58:59,226 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 12:58:59,228 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_125859.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_125850.json); skipping regeneration
2025-10-09 12:58:59,229 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
2025-10-09 12:58:59,229 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 12:58:59,230 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_125859.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_125850.json); skipping regeneration
2025-10-09 12:58:59,231 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
INFO:     Shutting down
INFO:     Waiting for application shutdown.
2025-10-09 12:58:59,332 - app.main - INFO - ⏹️ Shutting down CV Management API...
INFO:     Application shutdown complete.
INFO:     Finished server process [30366]
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
No AI providers auto-configured - user must select provider and configure API keys via frontend
INFO:     Started server process [30826]
INFO:     Waiting for application startup.
2025-10-09 12:59:06,773 - app.main - INFO - 🚀 Starting CV Management API...
🔧 Development mode: JWT expiration set to 480 minutes
2025-10-09 12:59:07,116 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-10-09 12:59:07,116 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-09 12:59:07,117 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:59:07,117 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:59:07,157 INFO sqlalchemy.engine.Engine select current_schema()
2025-10-09 12:59:07,157 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-09 12:59:07,158 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:59:07,158 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:59:07,197 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-10-09 12:59:07,197 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-09 12:59:07,198 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 12:59:07,198 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 12:59:07,238 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:59:07,238 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:59:07,238 INFO sqlalchemy.engine.Engine SELECT 1
2025-10-09 12:59:07,238 - sqlalchemy.engine.Engine - INFO - SELECT 1
2025-10-09 12:59:07,239 INFO sqlalchemy.engine.Engine [generated in 0.00074s] {}
2025-10-09 12:59:07,239 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] {}
2025-10-09 12:59:07,271 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 12:59:07,271 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 12:59:07,288 - app.database - INFO - Database connection successful
2025-10-09 12:59:07,289 - app.main - INFO - ✅ Database connection successful
2025-10-09 12:59:07,307 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 12:59:07,307 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 12:59:07,315 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,315 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,315 INFO sqlalchemy.engine.Engine [generated in 0.00083s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,315 - sqlalchemy.engine.Engine - INFO - [generated in 0.00083s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,357 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,357 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,358 INFO sqlalchemy.engine.Engine [cached since 0.04342s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,358 - sqlalchemy.engine.Engine - INFO - [cached since 0.04342s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,382 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,382 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,383 INFO sqlalchemy.engine.Engine [cached since 0.06812s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,383 - sqlalchemy.engine.Engine - INFO - [cached since 0.06812s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,407 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,407 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,407 INFO sqlalchemy.engine.Engine [cached since 0.09298s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,407 - sqlalchemy.engine.Engine - INFO - [cached since 0.09298s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,434 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,434 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,434 INFO sqlalchemy.engine.Engine [cached since 0.1198s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,434 - sqlalchemy.engine.Engine - INFO - [cached since 0.1198s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,454 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,454 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,455 INFO sqlalchemy.engine.Engine [cached since 0.1403s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,455 - sqlalchemy.engine.Engine - INFO - [cached since 0.1403s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,478 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,478 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,478 INFO sqlalchemy.engine.Engine [cached since 0.1638s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,478 - sqlalchemy.engine.Engine - INFO - [cached since 0.1638s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,503 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,503 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,505 INFO sqlalchemy.engine.Engine [cached since 0.1901s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,505 - sqlalchemy.engine.Engine - INFO - [cached since 0.1901s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,525 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,525 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,526 INFO sqlalchemy.engine.Engine [cached since 0.2113s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,526 - sqlalchemy.engine.Engine - INFO - [cached since 0.2113s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,548 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,548 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,549 INFO sqlalchemy.engine.Engine [cached since 0.2342s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,549 - sqlalchemy.engine.Engine - INFO - [cached since 0.2342s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,574 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,574 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 12:59:07,574 INFO sqlalchemy.engine.Engine [cached since 0.2599s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,574 - sqlalchemy.engine.Engine - INFO - [cached since 0.2599s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 12:59:07,599 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 12:59:07,599 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 12:59:07,616 - app.database - INFO - Database tables created successfully
2025-10-09 12:59:07,616 - app.main - INFO - ✅ Database tables ready
2025-10-09 12:59:07,617 - app.main - INFO - 🎯 API Server started successfully on 0.0.0.0:8000
2025-10-09 12:59:07,617 - app.main - INFO - ✅ User directories will be created on-demand during login
INFO:     Application startup complete.
INFO:     127.0.0.1:57442 - "OPTIONS /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 12:59:07,631 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 12:59:07,632 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:59:07,632 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 12:59:07,633 - app.utils.path_debug - INFO -   📂 User base dir: user/munna@gmail.com/cv-analysis
2025-10-09 12:59:07,633 - app.utils.path_debug - INFO -   📂 Company dir: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 12:59:07,642 - app.utils.path_debug - INFO -   📂 Using analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:59:07,643 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 26628 bytes
INFO:     127.0.0.1:57453 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 12:59:19,337 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 12:59:19,338 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:59:19,339 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 12:59:19,339 - app.utils.path_debug - INFO -   📂 User base dir: user/munna@gmail.com/cv-analysis
2025-10-09 12:59:19,339 - app.utils.path_debug - INFO -   📂 Company dir: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 12:59:19,340 - app.utils.path_debug - INFO -   📂 Using analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_125812.json
2025-10-09 12:59:19,341 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 26628 bytes
INFO:     127.0.0.1:57461 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:57481 - "OPTIONS /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 12:59:41,798 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Fetching for company: Australia_for_UNHCR, user: munna@gmail.com
2025-10-09 12:59:41,798 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 12:59:41,799 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Searching in: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 12:59:41,799 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Found file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json
2025-10-09 12:59:41,800 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Successfully loaded recommendation, content length: 3455
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
INFO:     127.0.0.1:57483 - "GET /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:58137 - "OPTIONS /api/tailored-cv/available-companies-real HTTP/1.1" 200 OK
2025-10-09 13:15:29,036 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
INFO:     127.0.0.1:58137 - "GET /api/tailored-cv/available-companies-real HTTP/1.1" 200 OK
INFO:     127.0.0.1:58137 - "OPTIONS /api/tailored-cv/content/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 13:15:29,099 - app.tailored_cv.routes.cv_tailoring_routes - INFO - 📄 Tailored CV content request for Australia_for_UNHCR from user 4df52e53-b78f-45e9-8946-3b6c00618693
2025-10-09 13:15:29,099 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:15:29,100 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:15:29,101 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:15:29,111 - app.tailored_cv.routes.cv_tailoring_routes - INFO - ✅ Served TAILORED CV content: Australia_for_UNHCR_tailored_cv_20251009_115547.txt from tailored folder (670 characters)
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
🔍 Searching for tailored CV ONLY for company: Australia_for_UNHCR
📁 Found 4 tailored CV candidates
✅ Selected tailored CV: tailored - user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
INFO:     127.0.0.1:58139 - "GET /api/tailored-cv/content/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:58143 - "OPTIONS /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:58143 - "GET /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:58143 - "OPTIONS /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 13:15:34,463 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 13:15:34,463 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: []
2025-10-09 13:15:34,464 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 13:15:34,464 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {}
2025-10-09 13:15:34,464 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 13:15:34,465 - app.core.model_dependency - WARNING - ⚠️ Failed to switch to header model gpt-3.5-turbo
2025-10-09 13:15:34,506 - app.ai.ai_service - INFO - 🔄 Initializing AI providers for user munna@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
2025-10-09 13:15:34,569 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:15:34,569 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:15:34,578 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:34,578 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:34,579 INFO sqlalchemy.engine.Engine [generated in 0.00118s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 13:15:34,579 - sqlalchemy.engine.Engine - INFO - [generated in 0.00118s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 13:15:34,638 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:15:34,638 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 13:15:35,519 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 13:15:35,536 - app.ai.ai_service - INFO - ✅ Initialized openai provider with model gpt-4o for user munna@gmail.com
2025-10-09 13:15:35,556 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:15:35,556 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:15:35,557 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,557 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,557 INFO sqlalchemy.engine.Engine [cached since 0.9796s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 13:15:35,557 - sqlalchemy.engine.Engine - INFO - [cached since 0.9796s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 13:15:35,596 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:15:35,596 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 13:15:35,616 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user munna@gmail.com and provider anthropic
2025-10-09 13:15:35,633 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:15:35,633 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:15:35,634 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,634 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,634 INFO sqlalchemy.engine.Engine [cached since 1.057s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 13:15:35,634 - sqlalchemy.engine.Engine - INFO - [cached since 1.057s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 13:15:35,679 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:15:35,679 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 13:15:35,700 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user munna@gmail.com and provider deepseek
2025-10-09 13:15:35,721 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:15:35,721 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:15:35,724 INFO sqlalchemy.engine.Engine SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,724 - sqlalchemy.engine.Engine - INFO - SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 13:15:35,724 INFO sqlalchemy.engine.Engine [generated in 0.00041s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 13:15:35,724 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'param_1': 1}
2025-10-09 13:15:35,759 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:15:35,759 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:58145 - "POST /api/preliminary-analysis HTTP/1.1" 400 Bad Request
INFO:     127.0.0.1:58268 - "GET /api/preliminary-analysis/cache HTTP/1.1" 200 OK
2025-10-09 13:18:27,461 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 13:18:27,464 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: ['openai']
2025-10-09 13:18:27,464 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 13:18:28,262 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 13:18:28,273 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {'openai': {'provider': 'openai', 'model': 'gpt-4o', 'available': True, 'api_key_configured': True, 'current_model': 'gpt-4o', 'is_current': False}}
2025-10-09 13:18:28,273 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 13:18:28,273 - app.ai.ai_service - INFO - 🔄 Available providers: ['openai']
2025-10-09 13:18:28,273 - app.ai.ai_service - INFO - ✅ Switched to openai provider with model gpt-3.5-turbo
2025-10-09 13:18:28,274 - app.core.model_dependency - INFO - 🔄 Switched to model from header: gpt-3.5-turbo
2025-10-09 13:18:28,276 - app.routes.skills_analysis - INFO - 🎯 Preliminary analysis request: CV=maheshwor_tiwari.pdf, JD_length=6014, CONFIG=None
2025-10-09 13:18:28,278 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:28,280 - app.routes.skills_analysis - INFO - 🏢 Extracted company name: Australia_for_UNHCR
2025-10-09 13:18:28,280 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:28,284 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:28,284 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:28,285 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:18:28,285 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:28,287 - app.routes.skills_analysis - INFO - 🔗 [PRELIM_ANALYSIS] JD URL (latest job_info): https://www.ethicaljobs.com.au/members/australiaforunhcr/data-analyst
2025-10-09 13:18:28,289 - app.routes.skills_analysis - INFO - 📄 [PRELIM_ANALYSIS] Latest CV selected → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:18:28,290 - app.routes.skills_analysis - INFO - 🧪 [PRELIM_ANALYSIS] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 13:18:28,291 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 13:18:28,292 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 13:18:28,292 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 13:18:28,292 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Starting AI-powered skills analysis for maheshwor_tiwari.pdf
2025-10-09 13:18:28,293 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] CV content length: 670 chars
2025-10-09 13:18:28,293 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] JD content length: 6014 chars
2025-10-09 13:18:28,293 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using config: default
2025-10-09 13:18:28,293 - app.routes.skills_analysis - INFO - 🧪 [SKILLS_ANALYSIS] CV preview: 'Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data'
2025-10-09 13:18:28,294 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI provider: openai
2025-10-09 13:18:28,294 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI model: gpt-3.5-turbo
2025-10-09 13:18:28,294 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Provider available: True
2025-10-09 13:18:28,295 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Model from header: gpt-3.5-turbo
2025-10-09 13:18:28,295 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting CV skills with detailed structured analysis...
2025-10-09 13:18:28,295 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:18:29,886 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:18:29,896 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Starting response parsing...
2025-10-09 13:18:29,896 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Raw response preview: 
**SOFT SKILLS:**
- Analytical
- Stakeholder Management
- Results-Driven

**TECHNICAL SKILLS:**
- SQL
- Python
- Excel
- Power BI
- VBA
- Data Warehouse
- Data Extraction
- Data Analysis
- Business Intelligence

**DOMAIN KEYWORDS:**
- N/A...
2025-10-09 13:18:29,897 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] FULL CV RESPONSE: 
**SOFT SKILLS:**
- Analytical
- Stakeholder Management
- Results-Driven

**TECHNICAL SKILLS:**
- SQL
- Python
- Excel
- Power BI
- VBA
- Data Warehouse
- Data Extraction
- Data Analysis
- Business Intelligence

**DOMAIN KEYWORDS:**
- N/A
2025-10-09 13:18:29,897 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No SOFT_SKILLS variable found in response
2025-10-09 13:18:29,897 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No TECHNICAL_SKILLS variable found in response
2025-10-09 13:18:29,898 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No DOMAIN_KEYWORDS variable found in response
2025-10-09 13:18:29,898 - app.services.skill_extraction.response_parser - INFO - 🔄 [CV] Python format not found, trying markdown format...
2025-10-09 13:18:29,900 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Successfully extracted 13 total skills using multi-format parser
2025-10-09 13:18:29,900 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated soft_skills: 3 valid skills
2025-10-09 13:18:29,900 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated technical_skills: 9 valid skills
2025-10-09 13:18:29,901 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated domain_keywords: 1 valid skills
2025-10-09 13:18:29,901 - app.services.skill_extraction.response_parser - INFO - 📊 [CV] Parsing completed:
2025-10-09 13:18:29,901 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (3): ['Analytical', 'Stakeholder Management', 'Results-Driven']
2025-10-09 13:18:29,901 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (9): ['SQL', 'Python', 'Excel']...
2025-10-09 13:18:29,901 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (1): ['N/A']
2025-10-09 13:18:29,902 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting JD skills with detailed structured analysis...
2025-10-09 13:18:29,902 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:18:34,418 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:18:34,422 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Starting response parsing...
2025-10-09 13:18:34,422 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Raw response preview: ## SOFT SKILLS:
- Communication
- Leadership
- Teamwork
- Collaboration
- Negotiation
- Time Management
- Organization
- Adaptability
- Problem-solving
- Analytical Thinking
- Critical Thinking
- Creativity
- Innovation
- Detail-oriented
- Self-motivated
- Proactive
- Results-driven

## TECHNICAL SKILLS:
- Data Analysis
- Data Mining
- Business Intelligence
- Power BI
- SQL
- Excel
- Spreadsheets
- VBA
- Data Models
- SQL Data Warehouse
- Database Knowledge
- Tableau
- Project Management
- Stake...
2025-10-09 13:18:34,423 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Successfully extracted 53 total skills using multi-format parser
2025-10-09 13:18:34,423 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated soft_skills: 17 valid skills
2025-10-09 13:18:34,423 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated technical_skills: 20 valid skills
2025-10-09 13:18:34,424 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated domain_keywords: 16 valid skills
2025-10-09 13:18:34,424 - app.services.skill_extraction.response_parser - INFO - 📊 [JD] Parsing completed:
2025-10-09 13:18:34,424 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (17): ['Communication', 'Leadership', 'Teamwork']...
2025-10-09 13:18:34,424 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (20): ['Data Analysis', 'Data Mining', 'Business Intelligence']...
2025-10-09 13:18:34,424 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (16): ['Fundraising', 'Humanitarian Emergencies', 'Business Decision-making']...
2025-10-09 13:18:34,425 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using structured analysis as comprehensive analysis...
2025-10-09 13:18:34,425 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Technical Skills (9): ['SQL', 'Python', 'Excel', 'Power BI', 'VBA', 'Data Warehouse', 'Data Extraction', 'Data Analysis', 'Business Intelligence']
2025-10-09 13:18:34,425 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Soft Skills (3): ['Analytical', 'Stakeholder Management', 'Results-Driven']
2025-10-09 13:18:34,426 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Domain Keywords (1): ['N/A']
2025-10-09 13:18:34,426 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Technical Skills (20): ['Data Analysis', 'Data Mining', 'Business Intelligence', 'Power BI', 'SQL', 'Excel', 'Spreadsheets', 'VBA', 'Data Models', 'SQL Data Warehouse', 'Database Knowledge', 'Tableau', 'Project Management', 'Stakeholder Management', 'Data Extraction', 'Marketing Campaigns', 'Clean Data', 'Data Segmentation', 'Data Selections', 'Data Warehousing']
2025-10-09 13:18:34,426 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Soft Skills (17): ['Communication', 'Leadership', 'Teamwork', 'Collaboration', 'Negotiation', 'Time Management', 'Organization', 'Adaptability', 'Problem-solving', 'Analytical Thinking', 'Critical Thinking', 'Creativity', 'Innovation', 'Detail-oriented', 'Self-motivated', 'Proactive', 'Results-driven']
2025-10-09 13:18:34,426 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Domain Keywords (16): ['Fundraising', 'Humanitarian Emergencies', 'Business Decision-making', 'Direct Marketing Campaigns', 'Multi-channel Communication', 'Donor-centricity', 'Data Warehouse Administration', 'Business Requirements', 'Project Management Framework', 'Evidence-based Decision Making', 'Refugee Support', 'Data Utilization', 'Campaign Optimization', 'Communication Purposes', 'Data Governance', 'Best Practice Guidelines']
2025-10-09 13:18:34,427 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] Analysis completed successfully
2025-10-09 13:18:34,427 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 13:18:34,427 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:34,428 - app.services.skill_extraction.result_saver - INFO - 📁 Result saver initialized with base directory: user/munna@gmail.com/cv-analysis
2025-10-09 13:18:34,428 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:34,428 - app.routes.skills_analysis - INFO - 🔍 [COMPANY_DETECTION] Looking in: user/munna@gmail.com/cv-analysis/applied_companies
2025-10-09 13:18:34,429 - app.routes.skills_analysis - INFO - 📁 [COMPANY_DETECTION] Found company folder: Australia_for_UNHCR with 5 job_info files
2025-10-09 13:18:34,429 - app.routes.skills_analysis - INFO - 🏢 [COMPANY_DETECTION] Using most recent company folder: Australia_for_UNHCR
2025-10-09 13:18:34,430 - app.routes.skills_analysis - INFO - 📋 [COMPANY_DETECTION] Job info company: Australia for UNHCR
2025-10-09 13:18:34,430 - app.services.skill_extraction.result_saver - INFO - 🏢 Using provided company name: Australia_for_UNHCR -> Australia_for_UNHCR
2025-10-09 13:18:34,430 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:34,431 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:18:34,431 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:34,432 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV already exists, preserving it: user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 13:18:34,433 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV preserved, skipping save: user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 13:18:34,434 - app.services.skill_extraction.result_saver - INFO - 💾 Analysis results saved (JSON) to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:34,435 - app.routes.skills_analysis - INFO - 📁 [FILE_SAVE] Results saved to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:34,435 - app.routes.skills_analysis - INFO - 🔍 [ANALYZE_MATCH] Starting analyze match assessment...
2025-10-09 13:18:34,440 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:18:37,463 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:18:37,466 - app.routes.skills_analysis - INFO - ✅ [ANALYZE_MATCH] Analysis completed (length: 1361 chars)
2025-10-09 13:18:37,467 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:37,468 - app.services.skill_extraction.result_saver - INFO - 📂 Found existing analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:37,468 - app.services.skill_extraction.result_saver - INFO - 🔍 Looking for analysis file in: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 13:18:37,468 - app.services.skill_extraction.result_saver - INFO - 📄 Using existing file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:37,470 - app.services.skill_extraction.result_saver - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:37,470 - app.routes.skills_analysis - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:37,471 - app.routes.skills_analysis - INFO - 🔍 [PREEXTRACTED_COMPARISON] Starting pre-extracted skills semantic comparison...
2025-10-09 13:18:37,474 - app.services.skill_extraction.preextracted_comparator - INFO - 🔍 [EXACT_MATCHES] Found 3 exact matches: {'technical_skills': [{'jd_skill': 'Business Intelligence', 'cv_skill': 'Business Intelligence', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Data Analysis', 'cv_skill': 'Data Analysis', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Data Extraction', 'cv_skill': 'Data Extraction', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Excel', 'cv_skill': 'Excel', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Power BI', 'cv_skill': 'Power BI', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'SQL', 'cv_skill': 'SQL', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'VBA', 'cv_skill': 'VBA', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'soft_skills': [{'jd_skill': 'Results-driven', 'cv_skill': 'Results-Driven', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'domain_keywords': []}
2025-10-09 13:18:37,476 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:18:58,558 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:18:58,565 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [EXACT_MATCH] Added exact match: Results-driven → Results-Driven
2025-10-09 13:18:58,565 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] technical_skills: matched 20 > CV count 9
2025-10-09 13:18:58,566 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] technical_skills: matched 20 + missing 10 = 30 vs JD count 20 (acceptable variance)
2025-10-09 13:18:58,566 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] soft_skills: matched 1 + missing 15 = 16 vs JD count 17 (acceptable variance)
2025-10-09 13:18:58,566 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] domain_keywords: matched 0 + missing 15 = 15 vs JD count 16 (acceptable variance)
2025-10-09 13:18:58,569 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=9, Soft=3, Domain=1
2025-10-09 13:18:58,569 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=20, Soft=17, Domain=16
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] 1 validation error(s) found
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - WARNING - ⚠️ [COMPARISON] JSON results failed validation, attempting to fix inconsistencies
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] Attempting to fix inconsistent AI response
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] technical_skills: Trimming 20 matches to 9 (CV limit)
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] technical_skills: Too many items (30 > 20), trimming missing items
2025-10-09 13:18:58,570 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] soft_skills: Adding 1 missing JD skills
2025-10-09 13:18:58,571 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] domain_keywords: Adding 1 missing JD skills
2025-10-09 13:18:58,571 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [FIX] Finished fixing AI response inconsistencies
2025-10-09 13:18:58,571 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] soft_skills: matched 1 + missing 19 = 20 vs JD count 17 (acceptable variance)
2025-10-09 13:18:58,571 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] domain_keywords: matched 0 + missing 20 = 20 vs JD count 16 (acceptable variance)
2025-10-09 13:18:58,572 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=9, Soft=3, Domain=1
2025-10-09 13:18:58,572 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=20, Soft=17, Domain=16
2025-10-09 13:18:58,572 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [VALIDATION] Comparison results passed validation
2025-10-09 13:18:58,572 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [COMPARISON] Successfully fixed AI response inconsistencies
2025-10-09 13:18:58,574 - app.routes.skills_analysis - INFO - ✅ [PREEXTRACTED_COMPARISON] Completed (length: 6657 chars)
2025-10-09 13:18:58,574 - app.services.skill_extraction.result_saver - INFO - 🏢 [PREEXTRACTED_COMPARISON] Inferred company from saved_file_path: Australia_for_UNHCR
2025-10-09 13:18:58,579 - app.services.skill_extraction.result_saver - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:58,579 - app.routes.skills_analysis - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:18:58,580 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:58,580 - app.routes.skills_analysis - INFO - ♻️ [PIPELINE] (preliminary-analysis) JD file already exists: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_125637.json
2025-10-09 13:18:58,582 - app.routes.skills_analysis - INFO - ♻️ [JOBS] Job already exists in saved_jobs.json: Data Analyst at Australia for UNHCR
2025-10-09 13:18:58,583 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] (preliminary-analysis) scheduling for company: Australia_for_UNHCR
2025-10-09 13:18:58,583 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] Scheduling JD analysis and CV–JD matching for 'Australia_for_UNHCR'...
2025-10-09 13:18:58,584 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:58,584 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting JD analysis for Australia_for_UNHCR (force_refresh=True)
2025-10-09 13:18:58,584 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:18:58,585 - app.services.jd_analysis.jd_analyzer - INFO - 🔄 Analyzing JD for Australia_for_UNHCR (force_refresh=True)
2025-10-09 13:18:58,586 - app.services.jd_analysis.jd_analyzer - INFO - 📄 Analyzing JD file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_125637.json
2025-10-09 13:18:58,586 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:00,309 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:00,312 - app.services.jd_analysis.jd_analyzer - INFO - ✅ JD analysis completed. Found 0 required and 0 preferred keywords
2025-10-09 13:19:00,313 - app.services.jd_analysis.jd_analyzer - INFO - ♻️ JD analysis already exists, reusing: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251008_201603.json
2025-10-09 13:19:00,313 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] JD analysis saved for Australia_for_UNHCR at: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251008_201603.json
2025-10-09 13:19:00,317 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:00,317 - app.services.jd_usage_tracker - ERROR - ❌ [JD_TRACKER] Error recording JD usage: Either jd_url or jd_text must be provided
2025-10-09 13:19:00,317 - app.routes.skills_analysis - INFO - 📝 [PIPELINE] JD usage recorded for Australia_for_UNHCR
2025-10-09 13:19:00,317 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting CV–JD matching for Australia_for_UNHCR
2025-10-09 13:19:00,317 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:00,318 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:00,319 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:00,319 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:00,320 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] CV–JD matching will use CV TXT: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:19:00,321 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Using provided CV path: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:19:00,322 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Read CV from: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:19:00,322 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🧪 [CV_JD_MATCHER] CV content length=668, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 13:19:00,323 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🔍 Found 7 required and 4 preferred keywords
2025-10-09 13:19:00,323 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:02,550 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:02,552 - app.services.cv_jd_matching.cv_jd_matcher - INFO - ✅ CV-JD matching completed. Found 6 matched required keywords
2025-10-09 13:19:02,552 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,552 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,553 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 💾 Saved CV-JD match results to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_131902.json
2025-10-09 13:19:02,553 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] CV–JD match results saved for Australia_for_UNHCR
2025-10-09 13:19:02,553 - app.routes.skills_analysis - INFO - 🔍 [PIPELINE] Starting component analysis for Australia_for_UNHCR
2025-10-09 13:19:02,556 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,557 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,557 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,558 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:02,560 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Latest CV selected → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:19:02,561 - app.routes.skills_analysis - INFO - 🧪 [PIPELINE] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
2025-10-09 13:19:02,561 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:02,562 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Required files found, proceeding with component analysis
2025-10-09 13:19:02,562 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Starting component analysis for: Australia_for_UNHCR =====
2025-10-09 13:19:02,563 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Starting component assembly for: Australia_for_UNHCR =====
2025-10-09 13:19:02,563 - app.services.ats.component_assembler - INFO - 📄 [ASSEMBLER] Using CV text provided by caller
2025-10-09 13:19:02,570 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Match results not found: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/cv_jd_match_results.json
2025-10-09 13:19:02,570 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting parallel component analyses...
2025-10-09 13:19:02,572 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Requesting skills relevance analysis...
2025-10-09 13:19:02,573 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:02,574 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus using match file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_131902.json
2025-10-09 13:19:02,589 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Using existing match_counts from file
2025-10-09 13:19:02,590 - app.services.ats.requirement_bonus_calculator - INFO - [ATS][BONUS] required_total=7 matched_required=6 missing_required=1 required_bonus=3.00 required_penalty=0.00 preferred_total=4 matched_preferred=0 missing_preferred=4 preferred_bonus=0.00 preferred_penalty=-0.60 total_bonus=2.40
2025-10-09 13:19:02,591 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus calculated: 2.40 points
2025-10-09 13:19:10,838 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:10,848 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response length: 4162
2025-10-09 13:19:10,848 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response preview: {
 "skills_analysis": [
  {
   "skill": "SQL",
   "cv_evidence": "Proficient in SQL",
   "jd_application": "Addressing data extract requirements for direct marketing campaigns, manipulating data for b
2025-10-09 13:19:10,849 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Cleaned response: {
 "skills_analysis": [
  {
   "skill": "SQL",
   "cv_evidence": "Proficient in SQL",
   "jd_application": "Addressing data extract requirements for direct marketing campaigns, manipulating data for b
2025-10-09 13:19:10,850 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Direct parse successful
2025-10-09 13:19:10,850 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Analysis completed. Score: 78.0
2025-10-09 13:19:10,850 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Requesting experience alignment analysis...
2025-10-09 13:19:10,851 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:13,765 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:13,775 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Analysis completed. Score: 75.0
2025-10-09 13:19:13,775 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Requesting industry fit analysis...
2025-10-09 13:19:13,776 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:16,066 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:16,068 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Analysis completed. Score: 60.0
2025-10-09 13:19:16,071 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Requesting role seniority analysis...
2025-10-09 13:19:16,071 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:20,675 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:20,677 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Analysis completed. Score: 20.0
2025-10-09 13:19:20,678 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Requesting technical depth analysis...
2025-10-09 13:19:20,678 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 13:19:22,824 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:22,826 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Analysis completed. Score: 90.0
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
📄 [UNIFIED] Reading CV content from: txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
🧪 [UNIFIED] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
📄 [UNIFIED] Reading CV content from: txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
🧪 [UNIFIED] CV content length=670, preview='Maheshwor Tiwari  | 0414 032 507  | maheshtwari99@gmail.com  | Hurstville, NSW, 2220  TECHNICAL SKILLS • SQL, Python, Excel, Power BI, VBA, Analytical, Stakeholder Management, Data Warehouse, Data Extraction, Data Analysis, Business Intelligence, Results-Driven  EXPERIENCE Data Analyst         Jul 2024 – Present The Bitrates, Sydney, New South Wales, Australia  • Designed and implemented 5 Python '
INFO:     127.0.0.1:58268 - "POST /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 13:19:22,828 - app.services.ats.component_assembler - INFO - [ASSEMBLER] All component analyses completed successfully
2025-10-09 13:19:22,828 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Validating cross-analyzer consistency...
2025-10-09 13:19:22,828 - app.services.ats.components.consistency_validator - ERROR - [CONSISTENCY] Validation failed: unsupported operand type(s) for -: 'str' and 'int'
2025-10-09 13:19:22,828 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Inconsistencies detected in analysis results
2025-10-09 13:19:22,829 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Confidence score: 100%
2025-10-09 13:19:22,834 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Results saved to: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:19:22,834 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting ATS score calculation...
2025-10-09 13:19:22,835 - app.services.ats.ats_score_calculator - INFO - [ATS] Starting comprehensive ATS score calculation
2025-10-09 13:19:22,836 - app.services.ats.ats_score_calculator - INFO - [ATS] Match rates - Tech: 45.0%, Domain: 0.0%, Soft: 5.0%
2025-10-09 13:19:22,836 - app.services.ats.ats_score_calculator - INFO - [ATS] Missing counts - Tech: 11, Domain: 20, Soft: 19
2025-10-09 13:19:22,836 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 1 - Tech: 9.0, Domain: 0.0, Soft: 0.8, Total: 9.8
2025-10-09 13:19:22,836 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 2 - Core: 15.9, Exp: 4.2, Potential: 6.0, Company: 0.8, Total: 26.9
2025-10-09 13:19:22,836 - app.services.ats.ats_score_calculator - INFO - [ATS] Final ATS Score: 39.0/100 (❌ Poor fit)
2025-10-09 13:19:22,838 - app.services.ats.component_assembler - INFO - [ASSEMBLER] ATS calculation completed. Score: 39.0/100 (❌ Poor fit)
2025-10-09 13:19:22,839 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:22,841 - app.services.ats_recommendation_service - INFO - Final ATS Score: 39.0375
2025-10-09 13:19:22,841 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 13:19:22,842 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 13:19:22,845 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131922.json
2025-10-09 13:19:22,863 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:19:22,863 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:19:22,866 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:22,866 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:22,866 INFO sqlalchemy.engine.Engine [generated in 0.00039s] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:22,866 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:22,901 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:22,901 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:22,901 INFO sqlalchemy.engine.Engine [generated in 0.00038s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:22,901 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:22,929 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:22,929 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:22,930 INFO sqlalchemy.engine.Engine [generated in 0.00045s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_131922.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131922.json', 'file_size': 26154, 'sha256': '28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31', 'timestamp': '20251009_131922'}
2025-10-09 13:19:22,930 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_131922.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131922.json', 'file_size': 26154, 'sha256': '28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31', 'timestamp': '20251009_131922'}
2025-10-09 13:19:22,954 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 13:19:22,954 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 13:19:22,954 INFO sqlalchemy.engine.Engine [generated in 0.00058s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 156}
2025-10-09 13:19:22,954 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 156}
2025-10-09 13:19:22,977 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 13:19:22,977 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 13:19:22,995 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 13:19:22,995 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 13:19:22,996 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:22,996 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 13:19:22,996 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Recommendation file created for Australia_for_UNHCR
2025-10-09 13:19:22,997 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Completed assembly. Scores: skills=78.0 exp=75.0 industry=60.0 seniority=20.0 tech=90.0 =====
2025-10-09 13:19:22,997 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Component analysis completed for: Australia_for_UNHCR =====
2025-10-09 13:19:22,997 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Component analysis completed for Australia_for_UNHCR
2025-10-09 13:19:22,997 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] Component scores extracted: 23 scores
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] skills_relevance: 78.0
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] experience_alignment: 75.0
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] industry_fit: 60.0
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] role_seniority: 20.0
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] technical_depth: 90.0
2025-10-09 13:19:22,998 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] ATS Score calculated: 39.0375
2025-10-09 13:19:22,999 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Creating input recommendation file for Australia_for_UNHCR
2025-10-09 13:19:22,999 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:23,000 - app.services.ats_recommendation_service - INFO - Final ATS Score: 39.0375
2025-10-09 13:19:23,000 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 13:19:23,000 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 13:19:23,002 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131923.json
2025-10-09 13:19:23,020 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:19:23,020 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:19:23,021 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:23,021 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:23,021 INFO sqlalchemy.engine.Engine [cached since 0.1555s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:23,021 - sqlalchemy.engine.Engine - INFO - [cached since 0.1555s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:23,060 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:23,060 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:23,060 INFO sqlalchemy.engine.Engine [cached since 0.1596s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:23,060 - sqlalchemy.engine.Engine - INFO - [cached since 0.1596s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:23,083 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:23,083 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:23,084 INFO sqlalchemy.engine.Engine [cached since 0.1545s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_size': 26154, 'sha256': '28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31', 'timestamp': '20251009_131923'}
2025-10-09 13:19:23,084 - sqlalchemy.engine.Engine - INFO - [cached since 0.1545s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_size': 26154, 'sha256': '28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31', 'timestamp': '20251009_131923'}
2025-10-09 13:19:23,106 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:19:23,106 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 13:19:23,128 - app.services.ats_recommendation_service - WARNING - ⚠️ [DB] Failed to register input recommendation: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "uq_company_files_dedupe"
DETAIL:  Key (user_id, company_id, file_type, sha256)=(4df52e53-b78f-45e9-8946-3b6c00618693, 12, input_recommendation, 28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31) already exists.

[SQL: INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at]
[parameters: {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_131923.json', 'file_size': 26154, 'sha256': '28309c68fdb3616ba1a9890dcdb7cb721a232eebf95a6f39791043f572bedb31', 'timestamp': '20251009_131923'}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-10-09 13:19:23,129 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 13:19:23,129 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 13:19:23,129 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:23,129 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 13:19:23,130 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Input recommendation file created for Australia_for_UNHCR
2025-10-09 13:19:23,130 - app.routes.skills_analysis - INFO - 🤖 [PIPELINE] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 13:19:23,130 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:23,131 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 13:19:23,133 - app.services.ai_recommendation_generator - INFO - 🟡 [AI GENERATOR] Input recommendation is newer (ai_mtime=1759975139.0242052, input_mtime=1759976363.0020752); regenerating AI recommendation
2025-10-09 13:19:23,133 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:23,133 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:23,134 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:23,135 - app.services.ai_recommendation_generator - ERROR - ❌ [AI GENERATOR] Error checking CV freshness: 'str' object has no attribute 'timestamp'
2025-10-09 13:19:23,137 - app.services.ai_recommendation_generator - INFO - 📋 [AI GENERATOR] Generated AI prompt for Australia_for_UNHCR using centralized template (11974 characters)
2025-10-09 13:19:23,137 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] Executing AI prompt for Australia_for_UNHCR
2025-10-09 13:19:23,137 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
WARNING:  WatchFiles detected changes in 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py'. Reloading...
2025-10-09 13:19:28,641 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 13:19:28,644 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] AI response generated - Provider: openai, Model: gpt-3.5-turbo
2025-10-09 13:19:28,644 - app.services.ai_recommendation_generator - INFO - 💰 [AI GENERATOR] Cost: $0.0045, Tokens: 3426
2025-10-09 13:19:28,645 - app.services.ai_recommendation_generator - INFO - 💾 [AI GENERATOR] Saved AI recommendation: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_131928.json (3.7KB)
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
2025-10-09 13:19:28,664 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:19:28,664 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:19:28,665 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:28,665 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 13:19:28,665 INFO sqlalchemy.engine.Engine [cached since 5.799s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:28,665 - sqlalchemy.engine.Engine - INFO - [cached since 5.799s ago] {'email_1': 'munna@gmail.com'}
2025-10-09 13:19:28,700 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:28,700 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 13:19:28,701 INFO sqlalchemy.engine.Engine [cached since 5.8s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:28,701 - sqlalchemy.engine.Engine - INFO - [cached since 5.8s ago] {'user_id_1': '4df52e53-b78f-45e9-8946-3b6c00618693', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 13:19:28,726 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:28,726 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 13:19:28,726 INFO sqlalchemy.engine.Engine [cached since 5.797s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_131928.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_131928.json', 'file_size': 3766, 'sha256': 'bd2021387f9cabdb5dd169f60d6d05c5a4f9fa6a7a7e9757b058c39a947e95ef', 'timestamp': '20251009_131928'}
2025-10-09 13:19:28,726 - sqlalchemy.engine.Engine - INFO - [cached since 5.797s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_131928.json', 'file_path': 'user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_131928.json', 'file_size': 3766, 'sha256': 'bd2021387f9cabdb5dd169f60d6d05c5a4f9fa6a7a7e9757b058c39a947e95ef', 'timestamp': '20251009_131928'}
2025-10-09 13:19:28,750 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 13:19:28,750 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 13:19:28,750 INFO sqlalchemy.engine.Engine [cached since 5.797s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 158}
2025-10-09 13:19:28,750 - sqlalchemy.engine.Engine - INFO - [cached since 5.797s ago] {'user_id': '4df52e53-b78f-45e9-8946-3b6c00618693', 'company_id': 12, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 158}
2025-10-09 13:19:28,772 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 13:19:28,772 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 13:19:28,792 - app.services.ai_recommendation_generator - INFO - ✅ [AI GENERATOR] AI recommendation generated and saved for Australia_for_UNHCR
2025-10-09 13:19:28,792 - app.services.ai_recommendation_generator - INFO - 📄 File: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_125859.json
2025-10-09 13:19:28,792 - app.services.ai_recommendation_generator - INFO - 💰 Cost: $0.0045
2025-10-09 13:19:28,792 - app.services.ai_recommendation_generator - INFO - 🔤 Tokens: 3426
2025-10-09 13:19:28,793 - app.services.ai_recommendation_generator - INFO - 🚀 [AI GENERATOR] Starting automatic CV tailoring for Australia_for_UNHCR
2025-10-09 13:19:28,793 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:28,795 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 13:19:28,795 - app.tailored_cv.services.cv_tailoring_service - INFO - Loading real data for Australia_for_UNHCR
2025-10-09 13:19:28,795 - app.tailored_cv.services.cv_tailoring_service - INFO - Company folder: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 13:19:28,796 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:28,796 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:28,797 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:28,798 - app.tailored_cv.services.cv_tailoring_service - INFO - 📄 [TAILORING] Using latest CV via unified selector → type=tailored, ts=20251009_115547, path=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 13:19:28,798 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Loading CV from user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 13:19:28,799 - app.tailored_cv.services.cv_tailoring_service - INFO - - First 200 chars: {   "contact": {     "name": "Maheshwor Tiwari",     "phone": "0414 032 507",     "email": "maheshtwari99@gmail.com",     "linkedin": "",     "location": "Hurstville, NSW, 2220",     "website": ""   }
2025-10-09 13:19:28,799 - app.tailored_cv.services.recommendation_parser - INFO - 📂 Loading CV from: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
2025-10-09 13:19:28,799 - app.tailored_cv.services.recommendation_parser - INFO - 📋 CV format check:
2025-10-09 13:19:28,800 - app.tailored_cv.services.recommendation_parser - INFO -   - Top-level keys: ['contact', 'education', 'experience', 'projects', 'skills', 'created_at', 'last_edited', 'manually_edited']
2025-10-09 13:19:28,800 - app.tailored_cv.services.recommendation_parser - INFO -   - Has metadata: False
2025-10-09 13:19:28,800 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Detected tailored structured CV format (contact/experience/skills)
2025-10-09 13:19:28,800 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Successfully normalized tailored structured CV
2025-10-09 13:19:28,800 - app.tailored_cv.services.cv_tailoring_service - INFO - - Parsed CV data keys: ['contact', 'education', 'experience', 'skills', 'projects']
2025-10-09 13:19:28,800 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔄 Converting skills from List[str] to List[SkillCategory]
2025-10-09 13:19:28,801 - app.tailored_cv.services.cv_tailoring_service - INFO - - Final CV object attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 13:19:28,807 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Parsed recommendation for Australia_for_UNHCR
2025-10-09 13:19:28,808 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded real CV and recommendation for Australia_for_UNHCR
2025-10-09 13:19:28,808 - app.tailored_cv.services.cv_tailoring_service - INFO - 🎯 Starting CV tailoring for Australia_for_UNHCR - Senior Data Analyst
2025-10-09 13:19:28,809 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Validating CV structure:
2025-10-09 13:19:28,809 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV object type: <class 'app.tailored_cv.models.cv_models.OriginalCV'>
2025-10-09 13:19:28,810 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 13:19:28,810 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV data: {
  "contact": {
    "name": "Maheshwor Tiwari",
    "phone": "0414 032 507",
    "email": "maheshtwari99@gmail.com",
    "linkedin": "",
    "location": "Hurstville, NSW, 2220",
    "website": ""
  },
  "education": [],
  "experience": [
    {
      "company": "The Bitrates",
      "title": "Data Analyst",
      "location": "The Bitrates, Sydney, New South Wales, Australia",
      "start_date": "Jul 2024",
      "end_date": "Present",
      "duration": null,
      "bullets": [
        "Designed and implemented 5 Python scripts for data cleaning and preprocessing, improving data pipeline efficiency by 30% and processing 100K records weekly.",
        "Developed 5 machine learning models in Python for predictive analytics, enabling datadriven business decisions and increasing accuracy by 20%."
      ],
      "skills_used": null
    }
  ],
  "projects": [],
  "skills": [
    {
      "category": "Technical Skills",
      "skills": [
        "SQL",
        "Python",
        "Excel",
        "Power BI",
        "VBA",
        "Analytical",
        "Stakeholder Management",
        "Data Warehouse",
        "Data Extraction",
        "Data Analysis",
        "Business Intelligence",
        "ResultsDriven"
      ]
    }
  ],
  "experience_level": null,
  "total_years_experience": null,
  "created_at": null,
  "updated_at": null
}
2025-10-09 13:19:28,811 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] 🎯 Starting CV tailoring for Australia_for_UNHCR with strategy: education_first
2025-10-09 13:19:28,811 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] Initial stats:
2025-10-09 13:19:28,811 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - Experience entries: 1
2025-10-09 13:19:28,811 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - Total bullets: 2
2025-10-09 13:19:28,811 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - Skills categories: 1
2025-10-09 13:19:28,812 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - Total skills: 12
2025-10-09 13:19:28,812 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] Critical gaps to address: Business Intelligence, Direct Marketing Campaigns, VBA, Detail-oriented, Analytical
2025-10-09 13:19:28,812 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] Technical enhancements needed: 
2025-10-09 13:19:28,813 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] 🤖 Generating tailored CV using AI service...
2025-10-09 13:19:28,813 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] Attempt 1/5 with temp=0.0
2025-10-09 13:19:28,813 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - System prompt length: 10574
2025-10-09 13:19:28,813 - app.tailored_cv.services.cv_tailoring_service - INFO - [64bc3a1a] - User prompt length: 6918
2025-10-09 13:19:28,813 - app.tailored_cv.services.cv_tailoring_service - ERROR - ❌ CV tailoring failed: generate_response() missing 1 required positional argument: 'user'
2025-10-09 13:19:28,813 - app.services.ai_recommendation_generator - ERROR - ❌ [AI GENERATOR] Error during automatic CV tailoring for Australia_for_UNHCR: CV tailoring process failed: generate_response() missing 1 required positional argument: 'user'
2025-10-09 13:19:28,814 - app.services.ai_recommendation_generator - WARNING - ⚠️ [AI GENERATOR] CV tailoring failed for Australia_for_UNHCR
2025-10-09 13:19:28,814 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] AI recommendation generated for Australia_for_UNHCR
2025-10-09 13:19:28,814 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] Starting tailored CV generation for Australia_for_UNHCR
2025-10-09 13:19:28,815 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:28,815 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 13:19:28,815 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:28,816 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Found AI recommendation file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_131928.json
2025-10-09 13:19:28,816 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Tailored CV found: user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.txt
2025-10-09 13:19:28,816 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Pipeline summary for Australia_for_UNHCR:
2025-10-09 13:19:28,816 - app.routes.skills_analysis - INFO -    ✅ Successful: ['jd_analysis', 'cv_jd_matching', 'component_analysis', 'input_recommendation', 'ai_recommendation', 'tailored_cv']
2025-10-09 13:19:28,817 - app.routes.skills_analysis - INFO -    🎉 All steps completed successfully!
2025-10-09 13:19:28,817 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 13:19:28,818 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_131928.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_131923.json); skipping regeneration
2025-10-09 13:19:28,819 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
2025-10-09 13:19:28,819 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 13:19:28,821 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_131928.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_131923.json); skipping regeneration
2025-10-09 13:19:28,822 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
INFO:     Shutting down
INFO:     Waiting for application shutdown.
2025-10-09 13:19:28,926 - app.main - INFO - ⏹️ Shutting down CV Management API...
INFO:     Application shutdown complete.
INFO:     Finished server process [30826]
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=tailored, ts=20251009_115547, mtime=1759972918.3086433, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json
  - type=tailored, ts=20251008_202217, mtime=1759972918.3048198, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202217.json
  - type=tailored, ts=20251008_201707, mtime=1759972918.3166497, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_201707.json
  - type=tailored, ts=20251008_202541, mtime=1759972918.3257222, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251008_202541.json
  - type=original, ts=00000000_000000, mtime=1759971970.378451, json=user/munna@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=tailored, ts=20251009_115547, json=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.json, txt=user/munna@gmail.com/cv-analysis/cvs/tailored/Australia_for_UNHCR_tailored_cv_20251009_115547.txt
No AI providers auto-configured - user must select provider and configure API keys via frontend
INFO:     Started server process [33901]
INFO:     Waiting for application startup.
2025-10-09 13:19:33,899 - app.main - INFO - 🚀 Starting CV Management API...
🔧 Development mode: JWT expiration set to 480 minutes
2025-10-09 13:19:34,227 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-10-09 13:19:34,227 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-09 13:19:34,227 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 13:19:34,227 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 13:19:34,268 INFO sqlalchemy.engine.Engine select current_schema()
2025-10-09 13:19:34,268 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-09 13:19:34,268 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 13:19:34,268 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 13:19:34,314 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-10-09 13:19:34,314 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-09 13:19:34,315 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 13:19:34,315 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 13:19:34,356 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:19:34,356 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:19:34,356 INFO sqlalchemy.engine.Engine SELECT 1
2025-10-09 13:19:34,356 - sqlalchemy.engine.Engine - INFO - SELECT 1
2025-10-09 13:19:34,356 INFO sqlalchemy.engine.Engine [generated in 0.00061s] {}
2025-10-09 13:19:34,356 - sqlalchemy.engine.Engine - INFO - [generated in 0.00061s] {}
2025-10-09 13:19:34,400 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 13:19:34,400 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 13:19:34,424 - app.database - INFO - Database connection successful
2025-10-09 13:19:34,425 - app.main - INFO - ✅ Database connection successful
2025-10-09 13:19:34,447 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 13:19:34,447 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 13:19:34,453 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,453 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,453 INFO sqlalchemy.engine.Engine [generated in 0.00043s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,453 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,494 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,494 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,494 INFO sqlalchemy.engine.Engine [cached since 0.04193s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,494 - sqlalchemy.engine.Engine - INFO - [cached since 0.04193s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,517 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,517 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,517 INFO sqlalchemy.engine.Engine [cached since 0.0645s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,517 - sqlalchemy.engine.Engine - INFO - [cached since 0.0645s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,541 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,541 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,541 INFO sqlalchemy.engine.Engine [cached since 0.08905s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,541 - sqlalchemy.engine.Engine - INFO - [cached since 0.08905s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,564 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,564 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,565 INFO sqlalchemy.engine.Engine [cached since 0.1121s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,565 - sqlalchemy.engine.Engine - INFO - [cached since 0.1121s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,594 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,594 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,595 INFO sqlalchemy.engine.Engine [cached since 0.1426s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,595 - sqlalchemy.engine.Engine - INFO - [cached since 0.1426s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,619 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,619 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,620 INFO sqlalchemy.engine.Engine [cached since 0.1672s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,620 - sqlalchemy.engine.Engine - INFO - [cached since 0.1672s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,639 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,639 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,639 INFO sqlalchemy.engine.Engine [cached since 0.1868s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,639 - sqlalchemy.engine.Engine - INFO - [cached since 0.1868s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,658 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,658 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,658 INFO sqlalchemy.engine.Engine [cached since 0.2059s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,658 - sqlalchemy.engine.Engine - INFO - [cached since 0.2059s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,682 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,682 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,682 INFO sqlalchemy.engine.Engine [cached since 0.2294s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,682 - sqlalchemy.engine.Engine - INFO - [cached since 0.2294s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,704 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,704 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 13:19:34,705 INFO sqlalchemy.engine.Engine [cached since 0.2523s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,705 - sqlalchemy.engine.Engine - INFO - [cached since 0.2523s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 13:19:34,728 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 13:19:34,728 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 13:19:34,744 - app.database - INFO - Database tables created successfully
2025-10-09 13:19:34,744 - app.main - INFO - ✅ Database tables ready
2025-10-09 13:19:34,744 - app.main - INFO - 🎯 API Server started successfully on 0.0.0.0:8000
2025-10-09 13:19:34,745 - app.main - INFO - ✅ User directories will be created on-demand during login
INFO:     Application startup complete.
INFO:     127.0.0.1:58322 - "OPTIONS /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 13:19:34,756 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 13:19:34,756 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:34,757 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 13:19:34,757 - app.utils.path_debug - INFO -   📂 User base dir: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:34,757 - app.utils.path_debug - INFO -   📂 Company dir: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 13:19:34,760 - app.utils.path_debug - INFO -   📂 Using analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:19:34,761 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 29661 bytes
INFO:     127.0.0.1:58322 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 13:19:48,910 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 13:19:48,913 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:19:48,913 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 13:19:48,914 - app.utils.path_debug - INFO -   📂 User base dir: user/munna@gmail.com/cv-analysis
2025-10-09 13:19:48,914 - app.utils.path_debug - INFO -   📂 Company dir: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 13:19:48,915 - app.utils.path_debug - INFO -   📂 Using analysis file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_131834.json
2025-10-09 13:19:48,916 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 29661 bytes
INFO:     127.0.0.1:58341 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:58355 - "OPTIONS /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 13:20:11,260 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Fetching for company: Australia_for_UNHCR, user: munna@gmail.com
2025-10-09 13:20:11,261 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/munna@gmail.com/cv-analysis for munna@gmail.com
2025-10-09 13:20:11,261 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Searching in: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 13:20:11,262 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Found file: user/munna@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_131928.json
2025-10-09 13:20:11,262 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Successfully loaded recommendation, content length: 3366
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: munna@gmail.com
INFO:     127.0.0.1:58355 - "GET /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:60096 - "OPTIONS /api/auth/register HTTP/1.1" 200 OK
2025-10-09 14:00:12,267 - app.routes.auth - INFO - 🔵 [REGISTER] Starting registration process
2025-10-09 14:00:12,270 - app.routes.auth - INFO - 🔵 [REGISTER] Raw payload: email='simran@gmail.com' password='simran' name='simran'
2025-10-09 14:00:12,270 - app.routes.auth - INFO - 🔵 [REGISTER] Email: 'simran@gmail.com', Name: 'simran', Password length: 6
2025-10-09 14:00:12,271 - app.routes.auth - INFO - 🔵 [REGISTER] Normalized email: 'simran@gmail.com'
2025-10-09 14:00:12,271 - app.routes.auth - INFO - 🔵 [REGISTER] Password validation - length: 6
2025-10-09 14:00:12,271 - app.routes.auth - INFO - 🔵 [REGISTER] Checking if user exists: 'simran@gmail.com'
2025-10-09 14:00:12,366 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:12,366 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:12,383 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:12,383 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:12,384 INFO sqlalchemy.engine.Engine [generated in 0.00130s] {'email_1': 'simran@gmail.com', 'param_1': 1}
2025-10-09 14:00:12,384 - sqlalchemy.engine.Engine - INFO - [generated in 0.00130s] {'email_1': 'simran@gmail.com', 'param_1': 1}
2025-10-09 14:00:12,431 - app.routes.auth - INFO - 🔵 [REGISTER] User does not exist, proceeding with creation
2025-10-09 14:00:12,431 - app.routes.auth - INFO - 🔵 [REGISTER] Base username: 'simran'
2025-10-09 14:00:12,433 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.username = %(username_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:12,433 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.username = %(username_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:12,434 INFO sqlalchemy.engine.Engine [generated in 0.00046s] {'username_1': 'simran', 'param_1': 1}
2025-10-09 14:00:12,434 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] {'username_1': 'simran', 'param_1': 1}
2025-10-09 14:00:12,581 - app.routes.auth - INFO - 🔵 [REGISTER] Final username: 'simran'
2025-10-09 14:00:12,582 - app.routes.auth - INFO - 🔵 [REGISTER] Creating user object
2025-10-09 14:00:12,788 - app.routes.auth - INFO - 🔵 [REGISTER] Setting password
2025-10-09 14:00:13,212 - app.routes.auth - INFO - 🔵 [REGISTER] Adding user to database
2025-10-09 14:00:13,212 - app.routes.auth - INFO - 🔵 [REGISTER] Committing to database
2025-10-09 14:00:13,217 INFO sqlalchemy.engine.Engine INSERT INTO users (username, email, full_name, hashed_password, is_active, is_verified, created_at, updated_at, last_login) VALUES (%(username)s, %(email)s, %(full_name)s, %(hashed_password)s, %(is_active)s, %(is_verified)s, %(created_at)s, now(), %(last_login)s) RETURNING users.id, users.updated_at
2025-10-09 14:00:13,217 - sqlalchemy.engine.Engine - INFO - INSERT INTO users (username, email, full_name, hashed_password, is_active, is_verified, created_at, updated_at, last_login) VALUES (%(username)s, %(email)s, %(full_name)s, %(hashed_password)s, %(is_active)s, %(is_verified)s, %(created_at)s, now(), %(last_login)s) RETURNING users.id, users.updated_at
2025-10-09 14:00:13,217 INFO sqlalchemy.engine.Engine [generated in 0.00043s] {'username': 'simran', 'email': 'simran@gmail.com', 'full_name': 'simran', 'hashed_password': '$2b$12$pA7/IjQfjfUMlnPrSZ2rsuoKxOxoy5j4YHw5odVFkn45PM5EmKsSK', 'is_active': True, 'is_verified': False, 'created_at': datetime.datetime(2025, 10, 9, 3, 0, 12, 584111), 'last_login': None}
2025-10-09 14:00:13,217 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] {'username': 'simran', 'email': 'simran@gmail.com', 'full_name': 'simran', 'hashed_password': '$2b$12$pA7/IjQfjfUMlnPrSZ2rsuoKxOxoy5j4YHw5odVFkn45PM5EmKsSK', 'is_active': True, 'is_verified': False, 'created_at': datetime.datetime(2025, 10, 9, 3, 0, 12, 584111), 'last_login': None}
2025-10-09 14:00:13,242 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:00:13,242 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:00:13,260 - app.routes.auth - INFO - 🔵 [REGISTER] Refreshing user object
2025-10-09 14:00:13,277 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:13,277 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:13,279 INFO sqlalchemy.engine.Engine SELECT users.id, users.username, users.email, users.full_name, users.hashed_password, users.is_active, users.is_verified, users.created_at, users.updated_at, users.last_login 
FROM users 
WHERE users.id = %(pk_1)s
2025-10-09 14:00:13,279 - sqlalchemy.engine.Engine - INFO - SELECT users.id, users.username, users.email, users.full_name, users.hashed_password, users.is_active, users.is_verified, users.created_at, users.updated_at, users.last_login 
FROM users 
WHERE users.id = %(pk_1)s
2025-10-09 14:00:13,279 INFO sqlalchemy.engine.Engine [generated in 0.00059s] {'pk_1': UUID('93d2b2fe-c1a7-4dd5-8006-199a4fe3e860')}
2025-10-09 14:00:13,279 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] {'pk_1': UUID('93d2b2fe-c1a7-4dd5-8006-199a4fe3e860')}
2025-10-09 14:00:13,314 - app.routes.auth - INFO - 🔵 [REGISTER] User created successfully with ID: 93d2b2fe-c1a7-4dd5-8006-199a4fe3e860
2025-10-09 14:00:13,315 - app.routes.auth - INFO - 🔵 [REGISTER] Creating user directories for: simran@gmail.com
2025-10-09 14:00:13,317 - app.utils.user_path_utils - INFO - ✅ Created user base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:00:13,318 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:00:13,318 - app.routes.auth - INFO - 🔵 [REGISTER] User directories created successfully
2025-10-09 14:00:13,318 - app.routes.auth - INFO - 🔵 [REGISTER] Preparing success response
2025-10-09 14:00:13,318 - app.routes.auth - INFO - ✅ [REGISTER] User registered successfully: simran@gmail.com (ID: 93d2b2fe-c1a7-4dd5-8006-199a4fe3e860)
INFO:     127.0.0.1:60096 - "POST /api/auth/register HTTP/1.1" 200 OK
2025-10-09 14:00:13,322 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:13,322 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:60098 - "OPTIONS /api/auth/login HTTP/1.1" 200 OK
2025-10-09 14:00:34,215 - app.routes.auth - INFO - 🔵 [LOGIN] Starting login process
2025-10-09 14:00:34,216 - app.routes.auth - INFO - 🔵 [LOGIN] Raw credentials: email='simran@gmail.com' password='simran'
2025-10-09 14:00:34,216 - app.routes.auth - INFO - 🔵 [LOGIN] Email: 'simran@gmail.com', Password length: 6
2025-10-09 14:00:34,216 - app.routes.auth - INFO - 🔵 [LOGIN] Attempting authentication
2025-10-09 14:00:34,216 - app.core.auth - INFO - 🔵 [AUTH] Starting authentication for email: 'simran@gmail.com'
2025-10-09 14:00:34,217 - app.core.auth - INFO - 🔵 [AUTH] Normalized inputs - email: 'simran@gmail.com', password length: 6
2025-10-09 14:00:34,217 - app.core.auth - INFO - 🔵 [AUTH] Using provided database session
2025-10-09 14:00:34,217 - app.core.auth - INFO - 🔵 [AUTH] Querying database for user: 'simran@gmail.com'
2025-10-09 14:00:34,242 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:34,242 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:34,243 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:34,243 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:34,243 INFO sqlalchemy.engine.Engine [cached since 21.86s ago] {'email_1': 'simran@gmail.com', 'param_1': 1}
2025-10-09 14:00:34,243 - sqlalchemy.engine.Engine - INFO - [cached since 21.86s ago] {'email_1': 'simran@gmail.com', 'param_1': 1}
2025-10-09 14:00:34,282 - app.core.auth - INFO - 🔵 [AUTH] User found: simran@gmail.com (ID: 93d2b2fe-c1a7-4dd5-8006-199a4fe3e860, Active: True)
2025-10-09 14:00:34,283 - app.core.auth - INFO - 🔵 [AUTH] Verifying password
2025-10-09 14:00:34,687 - app.core.auth - INFO - 🔵 [AUTH] Password verification successful for user: 'simran@gmail.com'
2025-10-09 14:00:34,687 - app.core.auth - INFO - ✅ [AUTH] Authentication successful
2025-10-09 14:00:34,688 - app.routes.auth - INFO - 🔵 [LOGIN] Authentication successful for user: simran@gmail.com (ID: 93d2b2fe-c1a7-4dd5-8006-199a4fe3e860)
2025-10-09 14:00:34,688 - app.routes.auth - INFO - 🔵 [LOGIN] Ensuring user directories exist for: simran@gmail.com
2025-10-09 14:00:34,689 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:00:34,689 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:00:34,689 - app.routes.auth - INFO - 🔵 [LOGIN] User directories verified/created successfully
2025-10-09 14:00:34,690 - app.routes.auth - INFO - 🔵 [LOGIN] Creating JWT tokens
2025-10-09 14:00:34,691 - app.routes.auth - INFO - 🔵 [LOGIN] Tokens created successfully
2025-10-09 14:00:34,692 - app.routes.auth - INFO - ✅ [LOGIN] Login successful for user: simran@gmail.com (ID: 93d2b2fe-c1a7-4dd5-8006-199a4fe3e860)
INFO:     127.0.0.1:60098 - "POST /api/auth/login HTTP/1.1" 200 OK
2025-10-09 14:00:34,694 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:34,694 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:60098 - "OPTIONS /api/ai/switch-model HTTP/1.1" 200 OK
INFO:     127.0.0.1:60114 - "POST /api/ai/switch-model HTTP/1.1" 404 Not Found
INFO:     127.0.0.1:60114 - "OPTIONS /api/cv/list HTTP/1.1" 200 OK
INFO:     127.0.0.1:60098 - "OPTIONS /api/tailored-cv/available-companies-real HTTP/1.1" 200 OK
INFO:     127.0.0.1:60118 - "OPTIONS /api/jobs/saved HTTP/1.1" 200 OK
2025-10-09 14:00:35,367 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:00:35,367 - app.routes.cv_simple - INFO - Listed 0 CV files
2025-10-09 14:00:35,369 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:00:35,372 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:00:35,373 - app.services.saved_jobs_service - INFO - ✨ Created new jobs file at user/simran@gmail.com/cv-analysis/saved_jobs/saved_jobs.json
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60114 - "GET /api/cv/list HTTP/1.1" 200 OK
INFO:     127.0.0.1:60120 - "GET /api/tailored-cv/available-companies-real HTTP/1.1" 200 OK
INFO:     127.0.0.1:60098 - "GET /api/jobs/saved HTTP/1.1" 200 OK
INFO:     127.0.0.1:60122 - "OPTIONS /api/ai/chat HTTP/1.1" 200 OK
2025-10-09 14:00:52,278 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 14:00:52,279 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: []
2025-10-09 14:00:52,279 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 14:00:52,279 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {}
2025-10-09 14:00:52,279 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 14:00:52,279 - app.core.model_dependency - WARNING - ⚠️ Failed to switch to header model gpt-3.5-turbo
2025-10-09 14:00:52,290 - app.ai.ai_service - INFO - 🔄 Initializing AI providers for user simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
2025-10-09 14:00:52,321 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:52,321 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:52,324 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,324 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,324 INFO sqlalchemy.engine.Engine [generated in 0.00047s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:00:52,324 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:00:52,365 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:52,365 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:52,382 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider openai
2025-10-09 14:00:52,398 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:52,398 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:52,402 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,402 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,405 INFO sqlalchemy.engine.Engine [cached since 0.08206s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:00:52,405 - sqlalchemy.engine.Engine - INFO - [cached since 0.08206s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:00:52,457 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:52,457 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:52,483 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider anthropic
2025-10-09 14:00:52,513 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:52,513 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:52,515 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,515 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,516 INFO sqlalchemy.engine.Engine [cached since 0.1924s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:00:52,516 - sqlalchemy.engine.Engine - INFO - [cached since 0.1924s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:00:52,559 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:52,559 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:52,584 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider deepseek
2025-10-09 14:00:52,606 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:52,606 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:52,608 INFO sqlalchemy.engine.Engine SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,608 - sqlalchemy.engine.Engine - INFO - SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:52,608 INFO sqlalchemy.engine.Engine [generated in 0.00041s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'param_1': 1}
2025-10-09 14:00:52,608 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'param_1': 1}
2025-10-09 14:00:52,656 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:52,656 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:60122 - "POST /api/ai/chat HTTP/1.1" 400 Bad Request
2025-10-09 14:00:55,424 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 14:00:55,427 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: []
2025-10-09 14:00:55,428 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 14:00:55,428 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {}
2025-10-09 14:00:55,428 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 14:00:55,428 - app.core.model_dependency - WARNING - ⚠️ Failed to switch to header model gpt-3.5-turbo
2025-10-09 14:00:55,428 - app.ai.ai_service - INFO - 🔄 Initializing AI providers for user simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
2025-10-09 14:00:55,447 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:55,447 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:55,448 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,448 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,448 INFO sqlalchemy.engine.Engine [cached since 3.125s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:00:55,448 - sqlalchemy.engine.Engine - INFO - [cached since 3.125s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:00:55,488 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:55,488 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:55,505 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider openai
2025-10-09 14:00:55,532 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:55,532 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:55,532 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,532 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,533 INFO sqlalchemy.engine.Engine [cached since 3.209s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:00:55,533 - sqlalchemy.engine.Engine - INFO - [cached since 3.209s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:00:55,574 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:55,574 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:55,594 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider anthropic
2025-10-09 14:00:55,612 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:55,612 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:55,612 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,612 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,613 INFO sqlalchemy.engine.Engine [cached since 3.289s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:00:55,613 - sqlalchemy.engine.Engine - INFO - [cached since 3.289s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:00:55,655 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:55,655 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:00:55,673 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider deepseek
2025-10-09 14:00:55,691 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:00:55,691 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:00:55,692 INFO sqlalchemy.engine.Engine SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,692 - sqlalchemy.engine.Engine - INFO - SELECT user_model_preferences.id AS user_model_preferences_id, user_model_preferences.user_id AS user_model_preferences_user_id, user_model_preferences.provider AS user_model_preferences_provider, user_model_preferences.model AS user_model_preferences_model, user_model_preferences.created_at AS user_model_preferences_created_at, user_model_preferences.updated_at AS user_model_preferences_updated_at 
FROM user_model_preferences 
WHERE user_model_preferences.user_id = %(user_id_1)s 
 LIMIT %(param_1)s
2025-10-09 14:00:55,692 INFO sqlalchemy.engine.Engine [cached since 3.084s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'param_1': 1}
2025-10-09 14:00:55,692 - sqlalchemy.engine.Engine - INFO - [cached since 3.084s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'param_1': 1}
2025-10-09 14:00:55,726 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:00:55,726 - sqlalchemy.engine.Engine - INFO - ROLLBACK
INFO:     127.0.0.1:60122 - "POST /api/ai/chat HTTP/1.1" 400 Bad Request
INFO:     127.0.0.1:60137 - "OPTIONS /api/api-keys/set HTTP/1.1" 200 OK
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
2025-10-09 14:01:20,492 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:01:20,492 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:01:20,493 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:20,493 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:20,493 INFO sqlalchemy.engine.Engine [cached since 28.17s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:20,493 - sqlalchemy.engine.Engine - INFO - [cached since 28.17s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:20,548 INFO sqlalchemy.engine.Engine INSERT INTO user_api_keys (user_id, provider, encrypted_key, key_hash, is_valid, last_validated, created_at, updated_at) VALUES (%(user_id)s, %(provider)s, %(encrypted_key)s, %(key_hash)s, %(is_valid)s, %(last_validated)s, now(), now()) RETURNING user_api_keys.id, user_api_keys.created_at, user_api_keys.updated_at
2025-10-09 14:01:20,548 - sqlalchemy.engine.Engine - INFO - INSERT INTO user_api_keys (user_id, provider, encrypted_key, key_hash, is_valid, last_validated, created_at, updated_at) VALUES (%(user_id)s, %(provider)s, %(encrypted_key)s, %(key_hash)s, %(is_valid)s, %(last_validated)s, now(), now()) RETURNING user_api_keys.id, user_api_keys.created_at, user_api_keys.updated_at
2025-10-09 14:01:20,548 INFO sqlalchemy.engine.Engine [generated in 0.00048s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider': 'openai', 'encrypted_key': 'Z0FBQUFBQm81eVdBcXJKRVNVbE81cVExa2NvYlhxQ1pUMm9HSUJYdFlnRUE1TUdaODJSYW5STXc2U1g2U2MwcWEtTUZSa2tKQVJlY0lCWEhOUGFRQ3ZjbkNzZ2dwRDU1VXItN1JXWkFkOXFiTWVWV ... (118 characters truncated) ... BdzhuNE5nQTB2SVlRMFNuZmtQaUV3bnNiMmxFek13OHV2aWJUcXJteUVaNWNnUUl2Qm1wZ1Z0MVd0Sm5UWDBUeE53ZEZYb1ZQcmh0UmpYbk1ReTVhNlYtWWZpczZUOE5NYTFWZEV3WDlDU2ZjODA9', 'key_hash': '819280703fd19bc03ccad496e4c2fc88236c72ed1d4b2b883f70efdff03bdab1', 'is_valid': False, 'last_validated': None}
2025-10-09 14:01:20,548 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider': 'openai', 'encrypted_key': 'Z0FBQUFBQm81eVdBcXJKRVNVbE81cVExa2NvYlhxQ1pUMm9HSUJYdFlnRUE1TUdaODJSYW5STXc2U1g2U2MwcWEtTUZSa2tKQVJlY0lCWEhOUGFRQ3ZjbkNzZ2dwRDU1VXItN1JXWkFkOXFiTWVWV ... (118 characters truncated) ... BdzhuNE5nQTB2SVlRMFNuZmtQaUV3bnNiMmxFek13OHV2aWJUcXJteUVaNWNnUUl2Qm1wZ1Z0MVd0Sm5UWDBUeE53ZEZYb1ZQcmh0UmpYbk1ReTVhNlYtWWZpczZUOE5NYTFWZEV3WDlDU2ZjODA9', 'key_hash': '819280703fd19bc03ccad496e4c2fc88236c72ed1d4b2b883f70efdff03bdab1', 'is_valid': False, 'last_validated': None}
2025-10-09 14:01:20,577 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:01:20,577 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:01:20,598 - app.services.user_api_key_manager - INFO - Created new API key for user simran@gmail.com and provider openai
2025-10-09 14:01:21,740 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 14:01:21,775 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:01:21,775 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:01:21,777 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:21,777 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:21,777 INFO sqlalchemy.engine.Engine [cached since 29.46s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:21,777 - sqlalchemy.engine.Engine - INFO - [cached since 29.46s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:21,821 INFO sqlalchemy.engine.Engine UPDATE user_api_keys SET is_valid=%(is_valid)s, last_validated=%(last_validated)s, updated_at=now() WHERE user_api_keys.id = %(user_api_keys_id)s
2025-10-09 14:01:21,821 - sqlalchemy.engine.Engine - INFO - UPDATE user_api_keys SET is_valid=%(is_valid)s, last_validated=%(last_validated)s, updated_at=now() WHERE user_api_keys.id = %(user_api_keys_id)s
2025-10-09 14:01:21,821 INFO sqlalchemy.engine.Engine [generated in 0.00057s] {'is_valid': True, 'last_validated': datetime.datetime(2025, 10, 9, 3, 1, 21, 817837), 'user_api_keys_id': 32}
2025-10-09 14:01:21,821 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] {'is_valid': True, 'last_validated': datetime.datetime(2025, 10, 9, 3, 1, 21, 817837), 'user_api_keys_id': 32}
2025-10-09 14:01:21,842 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:01:21,842 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:01:21,861 - app.ai.ai_service - INFO - 🔄 Refreshing AI providers after API key changes
2025-10-09 14:01:21,879 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:01:21,879 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:01:21,880 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:21,880 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:21,880 INFO sqlalchemy.engine.Engine [cached since 29.56s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:21,880 - sqlalchemy.engine.Engine - INFO - [cached since 29.56s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:01:21,918 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:01:21,918 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:01:22,578 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 14:01:22,591 - app.ai.ai_service - INFO - ✅ Initialized openai provider with model gpt-4o for user simran@gmail.com
2025-10-09 14:01:22,619 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:01:22,619 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:01:22,620 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:22,620 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:22,621 INFO sqlalchemy.engine.Engine [cached since 30.3s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:01:22,621 - sqlalchemy.engine.Engine - INFO - [cached since 30.3s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'anthropic', 'param_1': 1}
2025-10-09 14:01:22,676 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:01:22,676 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:01:22,697 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider anthropic
2025-10-09 14:01:22,715 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:01:22,715 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:01:22,715 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:22,715 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:01:22,715 INFO sqlalchemy.engine.Engine [cached since 30.39s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:01:22,715 - sqlalchemy.engine.Engine - INFO - [cached since 30.39s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'deepseek', 'param_1': 1}
2025-10-09 14:01:22,760 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:01:22,760 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:01:22,778 - app.ai.ai_config - ERROR - ❌ [AI_CONFIG] No API key found for user simran@gmail.com and provider deepseek
2025-10-09 14:01:22,779 - app.routes.api_keys - INFO - 🔄 Refreshed AI providers after setting openai API key for user simran@gmail.com
INFO:     127.0.0.1:60137 - "POST /api/api-keys/set HTTP/1.1" 200 OK
INFO:     127.0.0.1:60137 - "POST /api/ai/switch-model HTTP/1.1" 404 Not Found
INFO:     127.0.0.1:60154 - "POST /api/ai/switch-model HTTP/1.1" 404 Not Found
2025-10-09 14:01:31,696 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'None'
2025-10-09 14:01:31,696 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: ['openai']
2025-10-09 14:01:31,696 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: None
2025-10-09 14:01:32,200 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 14:01:32,212 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {'openai': {'provider': 'openai', 'model': 'gpt-4o', 'available': True, 'api_key_configured': True, 'current_model': 'gpt-4o', 'is_current': False}}
2025-10-09 14:01:32,213 - app.ai.ai_service - ERROR - ❌ No current provider available for model switching
2025-10-09 14:01:32,213 - app.ai.ai_service - INFO - 🔄 Available providers: ['openai']
2025-10-09 14:01:32,213 - app.ai.ai_service - INFO - ✅ Switched to openai provider with model gpt-3.5-turbo
2025-10-09 14:01:32,214 - app.core.model_dependency - INFO - 🔄 Switched to model from header: gpt-3.5-turbo
2025-10-09 14:01:32,214 - app.routes.ai - INFO - 🟢 [AI_CHAT] user=simran@gmail.com provider=openai model=gpt-3.5-turbo
2025-10-09 14:01:32,214 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:01:33,573 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60154 - "POST /api/ai/chat HTTP/1.1" 200 OK
2025-10-09 14:01:53,969 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:01:53,970 - app.routes.cv_simple - INFO - Listed 0 CV files
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60208 - "GET /api/cv/list HTTP/1.1" 200 OK
INFO:     127.0.0.1:60208 - "OPTIONS /api/cv/upload HTTP/1.1" 200 OK
2025-10-09 14:01:54,109 - app.routes.cv_simple - INFO - Uploading test_cv.pdf with structured processing for user: simran@gmail.com
2025-10-09 14:01:54,110 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:01:54,110 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:01:54,111 - app.services.enhanced_cv_upload_service - INFO - CV file saved: test_cv.pdf (40289 bytes)
2025-10-09 14:01:54,250 - app.services.enhanced_cv_upload_service - INFO - Text extracted successfully: 477 characters
2025-10-09 14:01:54,251 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:01:57,806 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:01:57,824 - app.services.structured_cv_parser - INFO - Successfully parsed CV using gpt-3.5-turbo
2025-10-09 14:01:57,825 - app.services.enhanced_cv_upload_service - INFO - CV parsed from raw text content
2025-10-09 14:01:57,826 - app.services.structured_cv_parser - INFO - Successfully saved structured CV to user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:01:57,827 - app.services.enhanced_cv_upload_service - INFO - Structured CV saved as original_cv.json: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json (replaced existing)
2025-10-09 14:01:57,827 - app.services.enhanced_cv_upload_service - INFO - CV processed successfully: test_cv.pdf
2025-10-09 14:01:57,827 - app.routes.cv_simple - INFO - ✅ test_cv.pdf uploaded and processed into structured format for user: simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60208 - "POST /api/cv/upload HTTP/1.1" 200 OK
2025-10-09 14:01:57,837 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:01:57,838 - app.routes.cv_simple - INFO - Listed 1 CV files
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60208 - "GET /api/cv/list HTTP/1.1" 200 OK
2025-10-09 14:01:58,402 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:01:58,403 - app.routes.cv_simple - INFO - Listed 1 CV files
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60208 - "GET /api/cv/list HTTP/1.1" 200 OK
INFO:     127.0.0.1:60208 - "OPTIONS /api/cv/save-for-analysis/test_cv.pdf HTTP/1.1" 200 OK
2025-10-09 14:02:00,257 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:00,276 - app.modules.cv.preview - INFO - CV content extracted: test_cv.pdf (477 characters)
2025-10-09 14:02:00,277 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:00,277 - app.routes.cv_organized - INFO - CV saved as text: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:00,278 - app.routes.cv_organized - INFO - Processing test_cv.pdf for structured CV format (background)...
2025-10-09 14:02:00,278 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:00,278 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:00,296 - app.services.enhanced_cv_upload_service - INFO - Text extracted successfully: 477 characters
2025-10-09 14:02:00,297 - app.services.enhanced_cv_upload_service - ERROR - Error processing existing CV: name 'user' is not defined
2025-10-09 14:02:00,297 - app.routes.cv_organized - ERROR - Background: Error saving structured CV: 
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60210 - "POST /api/cv/save-for-analysis/test_cv.pdf HTTP/1.1" 200 OK
INFO:     127.0.0.1:60210 - "OPTIONS /api/cv/content/test_cv.pdf HTTP/1.1" 200 OK
2025-10-09 14:02:00,389 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:00,413 - app.routes.cv_simple - INFO - CV content extracted: test_cv.pdf (477 characters)
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60208 - "GET /api/cv/content/test_cv.pdf HTTP/1.1" 200 OK
INFO:     127.0.0.1:60219 - "OPTIONS /api/job/scrape HTTP/1.1" 200 OK
2025-10-09 14:02:06,147 - app.utils.directory_utils - ERROR - ❌ Failed to create cv-analysis directories: User email must be provided
INFO:     127.0.0.1:60221 - "POST /api/job/scrape HTTP/1.1" 200 OK
INFO:     127.0.0.1:60221 - "OPTIONS /api/job-analysis/extract-and-save HTTP/1.1" 200 OK
2025-10-09 14:02:11,495 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
🔍 Starting AI extraction with token: eyJhbGciOiJIUzI1NiIs...
2025-10-09 14:02:11,524 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:02:11,524 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:02:11,525 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:02:11,525 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:02:11,525 INFO sqlalchemy.engine.Engine [cached since 79.21s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:02:11,525 - sqlalchemy.engine.Engine - INFO - [cached since 79.21s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:02:11,568 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:02:11,568 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:02:12,445 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-10-09 14:02:12,476 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:02:12,476 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:02:12,476 INFO sqlalchemy.engine.Engine SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:02:12,476 - sqlalchemy.engine.Engine - INFO - SELECT user_api_keys.id AS user_api_keys_id, user_api_keys.user_id AS user_api_keys_user_id, user_api_keys.provider AS user_api_keys_provider, user_api_keys.encrypted_key AS user_api_keys_encrypted_key, user_api_keys.key_hash AS user_api_keys_key_hash, user_api_keys.is_valid AS user_api_keys_is_valid, user_api_keys.last_validated AS user_api_keys_last_validated, user_api_keys.created_at AS user_api_keys_created_at, user_api_keys.updated_at AS user_api_keys_updated_at 
FROM user_api_keys 
WHERE user_api_keys.user_id = %(user_id_1)s AND user_api_keys.provider = %(provider_1)s 
 LIMIT %(param_1)s
2025-10-09 14:02:12,476 INFO sqlalchemy.engine.Engine [cached since 80.16s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:02:12,476 - sqlalchemy.engine.Engine - INFO - [cached since 80.16s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'provider_1': 'openai', 'param_1': 1}
2025-10-09 14:02:12,516 INFO sqlalchemy.engine.Engine UPDATE user_api_keys SET last_validated=%(last_validated)s, updated_at=now() WHERE user_api_keys.id = %(user_api_keys_id)s
2025-10-09 14:02:12,516 - sqlalchemy.engine.Engine - INFO - UPDATE user_api_keys SET last_validated=%(last_validated)s, updated_at=now() WHERE user_api_keys.id = %(user_api_keys_id)s
2025-10-09 14:02:12,516 INFO sqlalchemy.engine.Engine [generated in 0.00052s] {'last_validated': datetime.datetime(2025, 10, 9, 3, 2, 12, 514046), 'user_api_keys_id': 32}
2025-10-09 14:02:12,516 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] {'last_validated': datetime.datetime(2025, 10, 9, 3, 2, 12, 514046), 'user_api_keys_id': 32}
2025-10-09 14:02:12,538 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:02:12,538 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:02:12,557 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] No provider found for 'openai'
2025-10-09 14:02:12,558 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Available providers: []
2025-10-09 14:02:12,558 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Current provider name: openai
2025-10-09 14:02:12,558 - app.ai.ai_service - ERROR - ❌ [AI_SERVICE] Provider status: {}
2025-10-09 14:02:12,558 - app.services.enhanced_ai_service - ERROR - Error in enhanced AI service: No API key configured for openai. Please configure your API key in settings.
2025-10-09 14:02:12,558 - app.services.job_extraction_service - ERROR - AI service error: 
2025-10-09 14:02:12,607 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:12,609 - app.services.job_extraction_service - INFO - ✅ [JOB_EXTRACTION] Added job to shared jobs file: Data Analyst at Australia for UNHCR
🔍 AI extraction result: {'error': 'AI service failed: '}
⚠️ AI extraction failed: AI service failed: 
⚠️ Using rule-based extraction as fallback
INFO:     127.0.0.1:60221 - "POST /api/job-analysis/extract-and-save HTTP/1.1" 200 OK
INFO:     127.0.0.1:60221 - "OPTIONS /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:60228 - "GET /api/preliminary-analysis/cache HTTP/1.1" 200 OK
INFO:     127.0.0.1:60228 - "OPTIONS /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 14:02:15,512 - app.ai.ai_service - INFO - ✅ Switched to model gpt-3.5-turbo
2025-10-09 14:02:15,512 - app.core.model_dependency - INFO - 🔄 Switched to model from header: gpt-3.5-turbo
2025-10-09 14:02:15,513 - app.routes.skills_analysis - INFO - 🎯 Preliminary analysis request: CV=test_cv.pdf, JD_length=6014, CONFIG=None
2025-10-09 14:02:15,514 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:15,515 - app.routes.skills_analysis - INFO - 🏢 Extracted company name: Australia_for_UNHCR
2025-10-09 14:02:15,515 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:15,517 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:15,517 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:15,517 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:15,518 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:15,518 - app.routes.skills_analysis - INFO - 🔗 [PRELIM_ANALYSIS] JD URL (latest job_info): https://www.ethicaljobs.com.au/members/australiaforunhcr/data-analyst
2025-10-09 14:02:15,520 - app.routes.skills_analysis - INFO - 📄 [PRELIM_ANALYSIS] Latest CV selected → type=original, ts=None, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:15,521 - app.routes.skills_analysis - INFO - 🧪 [PRELIM_ANALYSIS] CV content length=477, preview='Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced Data Analyst with expertise in Python and SQL Education •Master of Data Science - Charles Darwin University •Bachelor of Computer Science Experience •Data Analyst at iBuild Building Solutions •Data Insight Analyst at Prop'
2025-10-09 14:02:15,521 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 14:02:15,521 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 14:02:15,521 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 14:02:15,521 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Starting AI-powered skills analysis for test_cv.pdf
2025-10-09 14:02:15,522 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] CV content length: 477 chars
2025-10-09 14:02:15,522 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] JD content length: 6014 chars
2025-10-09 14:02:15,522 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using config: default
2025-10-09 14:02:15,522 - app.routes.skills_analysis - INFO - 🧪 [SKILLS_ANALYSIS] CV preview: 'Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced D'
2025-10-09 14:02:15,523 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI provider: openai
2025-10-09 14:02:15,523 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Current AI model: gpt-3.5-turbo
2025-10-09 14:02:15,523 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Provider available: True
2025-10-09 14:02:15,523 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Model from header: gpt-3.5-turbo
2025-10-09 14:02:15,523 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting CV skills with detailed structured analysis...
2025-10-09 14:02:15,524 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:16,742 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:16,747 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Starting response parsing...
2025-10-09 14:02:16,747 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] Raw response preview: 
TECHNICAL SKILLS:
- Python
- SQL
- Power BI
- Machine Learning

SOFT SKILLS:
- Communication
- Teamwork
- Analytical Thinking

DOMAIN KEYWORDS:
- Data Analysis...
2025-10-09 14:02:16,747 - app.services.skill_extraction.response_parser - INFO - 🔍 [CV] FULL CV RESPONSE: 
TECHNICAL SKILLS:
- Python
- SQL
- Power BI
- Machine Learning

SOFT SKILLS:
- Communication
- Teamwork
- Analytical Thinking

DOMAIN KEYWORDS:
- Data Analysis
2025-10-09 14:02:16,748 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No SOFT_SKILLS variable found in response
2025-10-09 14:02:16,748 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No TECHNICAL_SKILLS variable found in response
2025-10-09 14:02:16,748 - app.services.skill_extraction.response_parser - WARNING - ⚠️ [CV] No DOMAIN_KEYWORDS variable found in response
2025-10-09 14:02:16,749 - app.services.skill_extraction.response_parser - INFO - 🔄 [CV] Python format not found, trying markdown format...
2025-10-09 14:02:16,750 - app.services.skill_extraction.response_parser - INFO - 🔄 [CV] Markdown format not found, trying section headers...
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Successfully extracted 8 total skills using multi-format parser
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated soft_skills: 3 valid skills
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated technical_skills: 4 valid skills
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO - ✅ [CV] Validated domain_keywords: 1 valid skills
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO - 📊 [CV] Parsing completed:
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (3): ['Communication', 'Teamwork', 'Analytical Thinking']
2025-10-09 14:02:16,751 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (4): ['Python', 'SQL', 'Power BI']...
2025-10-09 14:02:16,752 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (1): ['Data Analysis']
2025-10-09 14:02:16,752 - app.routes.skills_analysis - WARNING - ⚠️ [SKILLS_ANALYSIS] CV content appears minimal (tech=4, soft=3, domain=1) — continuing without fallback
2025-10-09 14:02:16,752 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Extracting JD skills with detailed structured analysis...
2025-10-09 14:02:16,753 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:21,041 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:21,044 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Starting response parsing...
2025-10-09 14:02:21,044 - app.services.skill_extraction.response_parser - INFO - 🔍 [JD] Raw response preview: ## SOFT SKILLS:
- Communication
- Leadership
- Teamwork
- Collaboration
- Negotiation
- Time Management
- Organization
- Adaptability
- Problem-solving
- Analytical Thinking
- Critical Thinking
- Creativity
- Innovation
- Detail-oriented
- Self-motivated
- Proactive
- Results-driven

## TECHNICAL SKILLS:
- Data Analysis
- Data Mining
- Business Intelligence
- Power BI
- SQL
- Excel
- Database Management
- Data Modeling
- Data Warehousing
- Spreadsheets
- VBA
- Stakeholder Management
- Report Cre...
2025-10-09 14:02:21,046 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Successfully extracted 58 total skills using multi-format parser
2025-10-09 14:02:21,046 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated soft_skills: 17 valid skills
2025-10-09 14:02:21,046 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated technical_skills: 20 valid skills
2025-10-09 14:02:21,046 - app.services.skill_extraction.response_parser - INFO - ✅ [JD] Validated domain_keywords: 21 valid skills
2025-10-09 14:02:21,047 - app.services.skill_extraction.response_parser - INFO - 📊 [JD] Parsing completed:
2025-10-09 14:02:21,047 - app.services.skill_extraction.response_parser - INFO -    Soft Skills (17): ['Communication', 'Leadership', 'Teamwork']...
2025-10-09 14:02:21,047 - app.services.skill_extraction.response_parser - INFO -    Technical Skills (20): ['Data Analysis', 'Data Mining', 'Business Intelligence']...
2025-10-09 14:02:21,047 - app.services.skill_extraction.response_parser - INFO -    Domain Keywords (21): ['Fundraising', 'Humanitarian Aid', 'Refugee Support']...
2025-10-09 14:02:21,048 - app.routes.skills_analysis - INFO - 🔍 [SKILLS_ANALYSIS] Using structured analysis as comprehensive analysis...
2025-10-09 14:02:21,048 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Technical Skills (4): ['Python', 'SQL', 'Power BI', 'Machine Learning']
2025-10-09 14:02:21,048 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Soft Skills (3): ['Communication', 'Teamwork', 'Analytical Thinking']
2025-10-09 14:02:21,049 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] CV Domain Keywords (1): ['Data Analysis']
2025-10-09 14:02:21,049 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Technical Skills (20): ['Data Analysis', 'Data Mining', 'Business Intelligence', 'Power BI', 'SQL', 'Excel', 'Database Management', 'Data Modeling', 'Data Warehousing', 'Spreadsheets', 'VBA', 'Stakeholder Management', 'Report Creation', 'Project Management', 'Data Extraction', 'Segmentation', 'Data Cleansing', 'Data Visualization', 'Querying', 'Relational Databases']
2025-10-09 14:02:21,049 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Soft Skills (17): ['Communication', 'Leadership', 'Teamwork', 'Collaboration', 'Negotiation', 'Time Management', 'Organization', 'Adaptability', 'Problem-solving', 'Analytical Thinking', 'Critical Thinking', 'Creativity', 'Innovation', 'Detail-oriented', 'Self-motivated', 'Proactive', 'Results-driven']
2025-10-09 14:02:21,049 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] JD Domain Keywords (21): ['Fundraising', 'Humanitarian Aid', 'Refugee Support', 'Business Decision-making', 'Direct Marketing', 'Donor-centricity', 'Multi-channel Communication', 'Data Warehouse Administration', 'Business Requirements', 'Project Needs Evaluation', 'Evidence-based Decision Making', 'Communication Purposes', 'Data Governance', 'Campaign Optimization', 'Clean Data Maintenance', 'Stakeholder Satisfaction', 'Inclusive Work Culture', 'Employee Engagement', 'Wellbeing Programs', 'Diversity and Inclusion', 'Equal Opportunity']
2025-10-09 14:02:21,050 - app.routes.skills_analysis - INFO - ✅ [SKILLS_ANALYSIS] Analysis completed successfully
2025-10-09 14:02:21,050 - app.services.skills_analysis_config - INFO - 🔧 [CONFIG] Using default configuration
2025-10-09 14:02:21,051 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:21,051 - app.services.skill_extraction.result_saver - INFO - 📁 Result saver initialized with base directory: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:21,052 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:21,052 - app.routes.skills_analysis - INFO - 🔍 [COMPANY_DETECTION] Looking in: user/simran@gmail.com/cv-analysis/applied_companies
2025-10-09 14:02:21,053 - app.routes.skills_analysis - INFO - 📁 [COMPANY_DETECTION] Found company folder: Australia_for_UNHCR with 1 job_info files
2025-10-09 14:02:21,054 - app.routes.skills_analysis - INFO - 🏢 [COMPANY_DETECTION] Using most recent company folder: Australia_for_UNHCR
2025-10-09 14:02:21,054 - app.routes.skills_analysis - INFO - 📋 [COMPANY_DETECTION] Job info company: Australia for UNHCR
2025-10-09 14:02:21,055 - app.services.skill_extraction.result_saver - INFO - 🏢 Using provided company name: Australia_for_UNHCR -> Australia_for_UNHCR
2025-10-09 14:02:21,056 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:21,057 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:21,058 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:21,059 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV already exists, preserving it: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:02:21,060 - app.services.skill_extraction.result_saver - INFO - 💾 Structured CV preserved, skipping save: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:02:21,062 - app.services.skill_extraction.result_saver - INFO - 💾 Analysis results saved (JSON) to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:21,062 - app.routes.skills_analysis - INFO - 📁 [FILE_SAVE] Results saved to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:21,062 - app.routes.skills_analysis - INFO - 🔍 [ANALYZE_MATCH] Starting analyze match assessment...
2025-10-09 14:02:21,065 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:25,552 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:25,557 - app.routes.skills_analysis - INFO - ✅ [ANALYZE_MATCH] Analysis completed (length: 1627 chars)
2025-10-09 14:02:25,557 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:25,558 - app.services.skill_extraction.result_saver - INFO - 📂 Found existing analysis file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:25,559 - app.services.skill_extraction.result_saver - INFO - 🔍 Looking for analysis file in: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 14:02:25,559 - app.services.skill_extraction.result_saver - INFO - 📄 Using existing file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:25,561 - app.services.skill_extraction.result_saver - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:25,561 - app.routes.skills_analysis - INFO - 📁 [ANALYZE_MATCH] Results appended to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:25,562 - app.routes.skills_analysis - INFO - 🔍 [PREEXTRACTED_COMPARISON] Starting pre-extracted skills semantic comparison...
2025-10-09 14:02:25,565 - app.services.skill_extraction.preextracted_comparator - INFO - 🔍 [EXACT_MATCHES] Found 3 exact matches: {'technical_skills': [{'jd_skill': 'Power BI', 'cv_skill': 'Power BI', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'SQL', 'cv_skill': 'SQL', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'soft_skills': [{'jd_skill': 'Analytical Thinking', 'cv_skill': 'Analytical Thinking', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Communication', 'cv_skill': 'Communication', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}, {'jd_skill': 'Teamwork', 'cv_skill': 'Teamwork', 'match_type': 'exact', 'confidence': 1.0, 'reasoning': 'Exact match - identical skills'}], 'domain_keywords': []}
2025-10-09 14:02:25,568 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:35,723 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:35,727 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [EXACT_MATCH] Added exact match: SQL → SQL
2025-10-09 14:02:35,727 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [EXACT_MATCH] Added exact match: Analytical Thinking → Analytical Thinking
2025-10-09 14:02:35,727 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [EXACT_MATCH] Added exact match: Communication → Communication
2025-10-09 14:02:35,728 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [EXACT_MATCH] Added exact match: Teamwork → Teamwork
2025-10-09 14:02:35,728 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] technical_skills: matched 5 > CV count 4
2025-10-09 14:02:35,728 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] soft_skills: matched 3 + missing 12 = 15 vs JD count 17 (acceptable variance)
2025-10-09 14:02:35,728 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=4, Soft=3, Domain=1
2025-10-09 14:02:35,729 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=20, Soft=17, Domain=21
2025-10-09 14:02:35,729 - app.services.skill_extraction.preextracted_comparator - WARNING - ❌ [VALIDATION] 1 validation error(s) found
2025-10-09 14:02:35,729 - app.services.skill_extraction.preextracted_comparator - WARNING - ⚠️ [COMPARISON] JSON results failed validation, attempting to fix inconsistencies
2025-10-09 14:02:35,729 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] Attempting to fix inconsistent AI response
2025-10-09 14:02:35,730 - app.services.skill_extraction.preextracted_comparator - WARNING - 🔧 [FIX] technical_skills: Trimming 5 matches to 4 (CV limit)
2025-10-09 14:02:35,730 - app.services.skill_extraction.preextracted_comparator - INFO - 🔧 [FIX] soft_skills: Adding 2 missing JD skills
2025-10-09 14:02:35,730 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [FIX] Finished fixing AI response inconsistencies
2025-10-09 14:02:35,730 - app.services.skill_extraction.preextracted_comparator - INFO - ℹ️ [VALIDATION] soft_skills: matched 3 + missing 17 = 20 vs JD count 17 (acceptable variance)
2025-10-09 14:02:35,731 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] CV Skills: Tech=4, Soft=3, Domain=1
2025-10-09 14:02:35,731 - app.services.skill_extraction.preextracted_comparator - INFO - 📊 [VALIDATION_DETAIL] JD Skills: Tech=20, Soft=17, Domain=21
2025-10-09 14:02:35,731 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [VALIDATION] Comparison results passed validation
2025-10-09 14:02:35,731 - app.services.skill_extraction.preextracted_comparator - INFO - ✅ [COMPARISON] Successfully fixed AI response inconsistencies
2025-10-09 14:02:35,731 - app.routes.skills_analysis - INFO - ✅ [PREEXTRACTED_COMPARISON] Completed (length: 6376 chars)
2025-10-09 14:02:35,732 - app.services.skill_extraction.result_saver - INFO - 🏢 [PREEXTRACTED_COMPARISON] Inferred company from saved_file_path: Australia_for_UNHCR
2025-10-09 14:02:35,734 - app.services.skill_extraction.result_saver - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:35,735 - app.routes.skills_analysis - INFO - 📁 [PREEXTRACTED_COMPARISON] Results appended to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:35,735 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:35,735 - app.routes.skills_analysis - INFO - ♻️ [PIPELINE] (preliminary-analysis) JD file already exists: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_140212.json
2025-10-09 14:02:35,738 - app.routes.skills_analysis - INFO - ♻️ [JOBS] Job already exists in saved_jobs.json: Data Analyst at Australia for UNHCR
2025-10-09 14:02:35,738 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] (preliminary-analysis) scheduling for company: Australia_for_UNHCR
2025-10-09 14:02:35,738 - app.routes.skills_analysis - INFO - 🚀 [PIPELINE] Scheduling JD analysis and CV–JD matching for 'Australia_for_UNHCR'...
2025-10-09 14:02:35,739 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:35,739 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting JD analysis for Australia_for_UNHCR (force_refresh=True)
2025-10-09 14:02:35,739 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:35,740 - app.services.jd_analysis.jd_analyzer - INFO - 🔄 Analyzing JD for Australia_for_UNHCR (force_refresh=True)
2025-10-09 14:02:35,741 - app.services.jd_analysis.jd_analyzer - INFO - 📄 Analyzing JD file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/jd_original_20251009_140212.json
2025-10-09 14:02:35,741 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:36,917 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:36,924 - app.services.jd_analysis.jd_analyzer - INFO - ✅ JD analysis completed. Found 0 required and 0 preferred keywords
2025-10-09 14:02:36,926 - app.services.jd_analysis.jd_analyzer - INFO - 💾 Analysis result saved to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251009_140236.json
2025-10-09 14:02:36,926 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] JD analysis saved for Australia_for_UNHCR at: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_jd_analysis_20251009_140236.json
2025-10-09 14:02:36,939 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:36,939 - app.services.jd_usage_tracker - ERROR - ❌ [JD_TRACKER] Error recording JD usage: Either jd_url or jd_text must be provided
2025-10-09 14:02:36,940 - app.routes.skills_analysis - INFO - 📝 [PIPELINE] JD usage recorded for Australia_for_UNHCR
2025-10-09 14:02:36,940 - app.routes.skills_analysis - INFO - 🔧 [PIPELINE] Starting CV–JD matching for Australia_for_UNHCR
2025-10-09 14:02:36,941 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:36,942 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:36,943 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:36,944 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:36,947 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] CV–JD matching will use CV TXT: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:36,949 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Using provided CV path: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:36,951 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 📄 [CV_JD_MATCHER] Read CV from: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:36,952 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🧪 [CV_JD_MATCHER] CV content length=477, preview='Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced Data Analyst with expertise in Python and SQL Education •Master of Data Science - Charles Darwin University •Bachelor of Computer Science Experience •Data Analyst at iBuild Building Solutions •Data Insight Analyst at Prop'
2025-10-09 14:02:36,952 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 🔍 Found 9 required and 4 preferred keywords
2025-10-09 14:02:36,953 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:38,746 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:38,750 - app.services.cv_jd_matching.cv_jd_matcher - INFO - ✅ CV-JD matching completed. Found 2 matched required keywords
2025-10-09 14:02:38,753 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,766 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,770 - app.services.cv_jd_matching.cv_jd_matcher - INFO - 💾 Saved CV-JD match results to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_140238.json
2025-10-09 14:02:38,771 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] CV–JD match results saved for Australia_for_UNHCR
2025-10-09 14:02:38,771 - app.routes.skills_analysis - INFO - 🔍 [PIPELINE] Starting component analysis for Australia_for_UNHCR
2025-10-09 14:02:38,773 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,775 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,780 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,781 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:38,791 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Latest CV selected → type=original, ts=None, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:02:38,799 - app.routes.skills_analysis - INFO - 🧪 [PIPELINE] CV content length=477, preview='Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced Data Analyst with expertise in Python and SQL Education •Master of Data Science - Charles Darwin University •Bachelor of Computer Science Experience •Data Analyst at iBuild Building Solutions •Data Insight Analyst at Prop'
2025-10-09 14:02:38,799 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:38,800 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Required files found, proceeding with component analysis
2025-10-09 14:02:38,801 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Starting component analysis for: Australia_for_UNHCR =====
2025-10-09 14:02:38,801 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Starting component assembly for: Australia_for_UNHCR =====
2025-10-09 14:02:38,801 - app.services.ats.component_assembler - INFO - 📄 [ASSEMBLER] Using CV text provided by caller
2025-10-09 14:02:38,837 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Match results not found: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/cv_jd_match_results.json
2025-10-09 14:02:38,839 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting parallel component analyses...
2025-10-09 14:02:38,854 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus using match file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_cv_jd_matching_20251009_140238.json
2025-10-09 14:02:38,873 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Requesting skills relevance analysis...
2025-10-09 14:02:38,874 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:38,880 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Using existing match_counts from file
2025-10-09 14:02:38,905 - app.services.ats.requirement_bonus_calculator - INFO - [ATS][BONUS] required_total=9 matched_required=2 missing_required=7 required_bonus=1.00 required_penalty=-4.00 preferred_total=4 matched_preferred=0 missing_preferred=4 preferred_bonus=0.00 preferred_penalty=-0.60 total_bonus=-3.60
2025-10-09 14:02:38,913 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Requirement bonus calculated: -3.60 points
2025-10-09 14:02:46,441 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:46,444 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response length: 4274
2025-10-09 14:02:46,444 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Raw response preview: {
 "skills_analysis": [
  {
   "skill": "Python",
   "cv_evidence": "Experienced Data Analyst with expertise in Python",
   "jd_application": "Data Analyst role requiring Python for data mining, profi
2025-10-09 14:02:46,445 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Cleaned response: {
 "skills_analysis": [
  {
   "skill": "Python",
   "cv_evidence": "Experienced Data Analyst with expertise in Python",
   "jd_application": "Data Analyst role requiring Python for data mining, profi
2025-10-09 14:02:46,445 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Direct parse successful
2025-10-09 14:02:46,446 - app.services.ats.components.skills_relevance_analyzer - INFO - [SKILLS] Analysis completed. Score: 80.0
2025-10-09 14:02:46,446 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Requesting experience alignment analysis...
2025-10-09 14:02:46,446 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:48,585 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:48,587 - app.services.ats.components.experience_analyzer - INFO - [EXPERIENCE] Analysis completed. Score: 65.0
2025-10-09 14:02:48,587 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Requesting industry fit analysis...
2025-10-09 14:02:48,587 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:52,066 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:52,069 - app.services.ats.components.industry_analyzer - INFO - [INDUSTRY] Analysis completed. Score: 60.0
2025-10-09 14:02:52,073 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Requesting role seniority analysis...
2025-10-09 14:02:52,073 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:55,241 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:55,242 - app.services.ats.components.seniority_analyzer - INFO - [SENIORITY] Analysis completed. Score: 6.0
2025-10-09 14:02:55,243 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Requesting technical depth analysis...
2025-10-09 14:02:55,243 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
2025-10-09 14:02:57,222 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:02:57,236 - app.services.ats.components.technical_analyzer - INFO - [TECHNICAL] Analysis completed. Score: 90.0
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
📄 [UNIFIED] Reading CV content from: txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
🧪 [UNIFIED] CV content length=477, preview='Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced Data Analyst with expertise in Python and SQL Education •Master of Data Science - Charles Darwin University •Bachelor of Computer Science Experience •Data Analyst at iBuild Building Solutions •Data Insight Analyst at Prop'
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
📄 [UNIFIED] Reading CV content from: txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
🧪 [UNIFIED] CV content length=477, preview='Maheshwor Tiwari maheshwor.tiwari@example.com|+61-123-456-789|Sydney, NSW, Australia linkedin.com/in/maheshwor-tiwari|github.com/maheshwor-tiwari Professional Summary Experienced Data Analyst with expertise in Python and SQL Education •Master of Data Science - Charles Darwin University •Bachelor of Computer Science Experience •Data Analyst at iBuild Building Solutions •Data Insight Analyst at Prop'
INFO:     127.0.0.1:60221 - "POST /api/preliminary-analysis HTTP/1.1" 200 OK
2025-10-09 14:02:57,237 - app.services.ats.component_assembler - INFO - [ASSEMBLER] All component analyses completed successfully
2025-10-09 14:02:57,237 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Validating cross-analyzer consistency...
2025-10-09 14:02:57,238 - app.services.ats.components.consistency_validator - ERROR - [CONSISTENCY] Validation failed: unsupported operand type(s) for -: 'str' and 'int'
2025-10-09 14:02:57,238 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Inconsistencies detected in analysis results
2025-10-09 14:02:57,238 - app.services.ats.component_assembler - WARNING - [ASSEMBLER] Confidence score: 100%
2025-10-09 14:02:57,243 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Results saved to: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:02:57,244 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Starting ATS score calculation...
2025-10-09 14:02:57,245 - app.services.ats.ats_score_calculator - INFO - [ATS] Starting comprehensive ATS score calculation
2025-10-09 14:02:57,247 - app.services.ats.ats_score_calculator - INFO - [ATS] Match rates - Tech: 20.0%, Domain: 0.0%, Soft: 15.0%
2025-10-09 14:02:57,247 - app.services.ats.ats_score_calculator - INFO - [ATS] Missing counts - Tech: 16, Domain: 21, Soft: 17
2025-10-09 14:02:57,247 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 1 - Tech: 4.0, Domain: 0.0, Soft: 2.2, Total: 6.2
2025-10-09 14:02:57,248 - app.services.ats.ats_score_calculator - INFO - [ATS] Category 2 - Core: 15.9, Exp: 2.8, Potential: 6.0, Company: 0.8, Total: 25.5
2025-10-09 14:02:57,248 - app.services.ats.ats_score_calculator - INFO - [ATS] Final ATS Score: 28.2/100 (❌ Poor fit)
2025-10-09 14:02:57,251 - app.services.ats.component_assembler - INFO - [ASSEMBLER] ATS calculation completed. Score: 28.2/100 (❌ Poor fit)
2025-10-09 14:02:57,252 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,253 - app.services.ats_recommendation_service - INFO - Final ATS Score: 28.177499999999995
2025-10-09 14:02:57,254 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 14:02:57,254 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 14:02:57,256 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json
2025-10-09 14:02:57,286 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:02:57,286 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:02:57,293 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:02:57,293 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:02:57,293 INFO sqlalchemy.engine.Engine [generated in 0.00093s] {'email_1': 'simran@gmail.com'}
2025-10-09 14:02:57,293 - sqlalchemy.engine.Engine - INFO - [generated in 0.00093s] {'email_1': 'simran@gmail.com'}
2025-10-09 14:02:57,340 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:02:57,340 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:02:57,341 INFO sqlalchemy.engine.Engine [generated in 0.00064s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:02:57,341 - sqlalchemy.engine.Engine - INFO - [generated in 0.00064s] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:02:57,373 INFO sqlalchemy.engine.Engine INSERT INTO companies (user_id, name, display_name, jd_url, created_at, updated_at) VALUES (%(user_id)s, %(name)s, %(display_name)s, %(jd_url)s, now(), now()) RETURNING companies.id, companies.created_at, companies.updated_at
2025-10-09 14:02:57,373 - sqlalchemy.engine.Engine - INFO - INSERT INTO companies (user_id, name, display_name, jd_url, created_at, updated_at) VALUES (%(user_id)s, %(name)s, %(display_name)s, %(jd_url)s, now(), now()) RETURNING companies.id, companies.created_at, companies.updated_at
2025-10-09 14:02:57,373 INFO sqlalchemy.engine.Engine [generated in 0.00056s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name': 'Australia_for_UNHCR', 'display_name': 'Australia for UNHCR', 'jd_url': None}
2025-10-09 14:02:57,373 - sqlalchemy.engine.Engine - INFO - [generated in 0.00056s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name': 'Australia_for_UNHCR', 'display_name': 'Australia for UNHCR', 'jd_url': None}
2025-10-09 14:02:57,399 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:02:57,399 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:02:57,399 INFO sqlalchemy.engine.Engine [generated in 0.00045s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_size': 26406, 'sha256': '3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9', 'timestamp': '20251009_140257'}
2025-10-09 14:02:57,399 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_size': 26406, 'sha256': '3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9', 'timestamp': '20251009_140257'}
2025-10-09 14:02:57,425 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 14:02:57,425 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 14:02:57,425 INFO sqlalchemy.engine.Engine [generated in 0.00059s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 159}
2025-10-09 14:02:57,425 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'kind': 'input_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 159}
2025-10-09 14:02:57,450 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:02:57,450 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:02:57,466 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 14:02:57,466 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 14:02:57,466 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,467 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 14:02:57,467 - app.services.ats.component_assembler - INFO - [ASSEMBLER] Recommendation file created for Australia_for_UNHCR
2025-10-09 14:02:57,467 - app.services.ats.component_assembler - INFO - ===== [ASSEMBLER] Completed assembly. Scores: skills=80.0 exp=65.0 industry=60.0 seniority=6.0 tech=90.0 =====
2025-10-09 14:02:57,467 - app.services.ats.modular_ats_orchestrator - INFO - ===== [MODULAR ATS] Component analysis completed for: Australia_for_UNHCR =====
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Component analysis completed for Australia_for_UNHCR
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] Component scores extracted: 23 scores
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] skills_relevance: 80.0
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] experience_alignment: 65.0
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] industry_fit: 60.0
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] role_seniority: 6.0
2025-10-09 14:02:57,468 - app.routes.skills_analysis - INFO - 📊 [PIPELINE] technical_depth: 90.0
2025-10-09 14:02:57,469 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] ATS Score calculated: 28.177499999999995
2025-10-09 14:02:57,469 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Creating input recommendation file for Australia_for_UNHCR
2025-10-09 14:02:57,469 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,470 - app.services.ats_recommendation_service - INFO - Final ATS Score: 28.177499999999995
2025-10-09 14:02:57,470 - app.services.ats_recommendation_service - INFO - Category Status: ❌ Poor fit
2025-10-09 14:02:57,470 - app.services.ats_recommendation_service - INFO - Successfully extracted comprehensive recommendation data for Australia_for_UNHCR
2025-10-09 14:02:57,473 - app.services.ats_recommendation_service - INFO - Successfully created recommendation file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json
2025-10-09 14:02:57,492 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:02:57,492 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:02:57,493 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:02:57,493 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:02:57,494 INFO sqlalchemy.engine.Engine [cached since 0.2014s ago] {'email_1': 'simran@gmail.com'}
2025-10-09 14:02:57,494 - sqlalchemy.engine.Engine - INFO - [cached since 0.2014s ago] {'email_1': 'simran@gmail.com'}
2025-10-09 14:02:57,531 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:02:57,531 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:02:57,531 INFO sqlalchemy.engine.Engine [cached since 0.1911s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:02:57,531 - sqlalchemy.engine.Engine - INFO - [cached since 0.1911s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:02:57,555 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:02:57,555 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:02:57,555 INFO sqlalchemy.engine.Engine [cached since 0.1566s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_size': 26406, 'sha256': '3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9', 'timestamp': '20251009_140257'}
2025-10-09 14:02:57,555 - sqlalchemy.engine.Engine - INFO - [cached since 0.1566s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_size': 26406, 'sha256': '3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9', 'timestamp': '20251009_140257'}
2025-10-09 14:02:57,578 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:02:57,578 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:02:57,599 - app.services.ats_recommendation_service - WARNING - ⚠️ [DB] Failed to register input recommendation: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "uq_company_files_dedupe"
DETAIL:  Key (user_id, company_id, file_type, sha256)=(93d2b2fe-c1a7-4dd5-8006-199a4fe3e860, 14, input_recommendation, 3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9) already exists.

[SQL: INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at]
[parameters: {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'input_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_input_recommendation_20251009_140257.json', 'file_size': 26406, 'sha256': '3bf091a654ccdabcb9f0dab23af79e50d6cf97d3b444175db772dc62623e10f9', 'timestamp': '20251009_140257'}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-10-09 14:02:57,601 - app.services.ats_recommendation_service - INFO - Successfully created AI recommendation prompt: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py
2025-10-09 14:02:57,601 - app.services.ats_recommendation_service - INFO - 🤖 [TRIGGER] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 14:02:57,602 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,602 - app.services.ats_recommendation_service - INFO - 📋 [TRIGGER] AI generation scheduled as background task for Australia_for_UNHCR
2025-10-09 14:02:57,602 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] Input recommendation file created for Australia_for_UNHCR
2025-10-09 14:02:57,603 - app.routes.skills_analysis - INFO - 🤖 [PIPELINE] Starting AI recommendation generation for Australia_for_UNHCR
2025-10-09 14:02:57,603 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,604 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 14:02:57,606 - app.services.ai_recommendation_generator - INFO - 🟡 [AI GENERATOR] Input recommendation is newer (ai_mtime=0, input_mtime=1759978977.4731877); regenerating AI recommendation
2025-10-09 14:02:57,607 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,608 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:02:57,608 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:02:57,609 - app.services.ai_recommendation_generator - INFO - ✅ [AI GENERATOR] CV is fresh - no updates since input recommendation
2025-10-09 14:02:57,613 - app.services.ai_recommendation_generator - INFO - 📋 [AI GENERATOR] Generated AI prompt for Australia_for_UNHCR using centralized template (12002 characters)
2025-10-09 14:02:57,614 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] Executing AI prompt for Australia_for_UNHCR
2025-10-09 14:02:57,615 - app.ai.ai_service - INFO - Generating response with provider: openai, model: gpt-3.5-turbo
WARNING:  WatchFiles detected changes in 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_prompt_recommendation.py'. Reloading...
2025-10-09 14:03:06,404 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-09 14:03:06,407 - app.services.ai_recommendation_generator - INFO - 🧠 [AI GENERATOR] AI response generated - Provider: openai, Model: gpt-3.5-turbo
2025-10-09 14:03:06,407 - app.services.ai_recommendation_generator - INFO - 💰 [AI GENERATOR] Cost: $0.0045, Tokens: 3495
2025-10-09 14:03:06,408 - app.services.ai_recommendation_generator - INFO - 💾 [AI GENERATOR] Saved AI recommendation: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_140306.json (4.2KB)
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
2025-10-09 14:03:06,425 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:03:06,425 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:03:06,427 INFO sqlalchemy.engine.Engine SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:03:06,427 - sqlalchemy.engine.Engine - INFO - SELECT users.id AS users_id, users.username AS users_username, users.email AS users_email, users.full_name AS users_full_name, users.hashed_password AS users_hashed_password, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.created_at AS users_created_at, users.updated_at AS users_updated_at, users.last_login AS users_last_login 
FROM users 
WHERE users.email = %(email_1)s
2025-10-09 14:03:06,427 INFO sqlalchemy.engine.Engine [cached since 9.135s ago] {'email_1': 'simran@gmail.com'}
2025-10-09 14:03:06,427 - sqlalchemy.engine.Engine - INFO - [cached since 9.135s ago] {'email_1': 'simran@gmail.com'}
2025-10-09 14:03:06,461 INFO sqlalchemy.engine.Engine SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:03:06,461 - sqlalchemy.engine.Engine - INFO - SELECT companies.id AS companies_id, companies.user_id AS companies_user_id, companies.name AS companies_name, companies.display_name AS companies_display_name, companies.jd_url AS companies_jd_url, companies.created_at AS companies_created_at, companies.updated_at AS companies_updated_at 
FROM companies 
WHERE companies.user_id = %(user_id_1)s AND companies.name = %(name_1)s
2025-10-09 14:03:06,461 INFO sqlalchemy.engine.Engine [cached since 9.122s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:03:06,461 - sqlalchemy.engine.Engine - INFO - [cached since 9.122s ago] {'user_id_1': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'name_1': 'Australia_for_UNHCR'}
2025-10-09 14:03:06,486 INFO sqlalchemy.engine.Engine INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:03:06,486 - sqlalchemy.engine.Engine - INFO - INSERT INTO company_files (user_id, company_id, file_type, file_format, filename, file_path, file_size, sha256, timestamp, created_at) VALUES (%(user_id)s, %(company_id)s, %(file_type)s, %(file_format)s, %(filename)s, %(file_path)s, %(file_size)s, %(sha256)s, %(timestamp)s, now()) RETURNING company_files.id, company_files.created_at
2025-10-09 14:03:06,486 INFO sqlalchemy.engine.Engine [cached since 9.088s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_140306.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_140306.json', 'file_size': 4291, 'sha256': '1d672d977920188683a66a18121187ae728215f27cb86adf9372ef7a35257edb', 'timestamp': '20251009_140306'}
2025-10-09 14:03:06,486 - sqlalchemy.engine.Engine - INFO - [cached since 9.088s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'file_type': 'ai_recommendation', 'file_format': 'json', 'filename': 'Australia_for_UNHCR_ai_recommendation_20251009_140306.json', 'file_path': 'user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_140306.json', 'file_size': 4291, 'sha256': '1d672d977920188683a66a18121187ae728215f27cb86adf9372ef7a35257edb', 'timestamp': '20251009_140306'}
2025-10-09 14:03:06,508 INFO sqlalchemy.engine.Engine INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 14:03:06,508 - sqlalchemy.engine.Engine - INFO - INSERT INTO analysis_runs (user_id, company_id, kind, status, model_used, started_at, completed_at, meta_json, source_file_id, output_file_id) VALUES (%(user_id)s, %(company_id)s, %(kind)s, %(status)s, %(model_used)s, now(), %(completed_at)s, %(meta_json)s, %(source_file_id)s, %(output_file_id)s) RETURNING analysis_runs.id, analysis_runs.started_at
2025-10-09 14:03:06,509 INFO sqlalchemy.engine.Engine [cached since 9.084s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 161}
2025-10-09 14:03:06,509 - sqlalchemy.engine.Engine - INFO - [cached since 9.084s ago] {'user_id': '93d2b2fe-c1a7-4dd5-8006-199a4fe3e860', 'company_id': 14, 'kind': 'ai_reco', 'status': 'completed', 'model_used': None, 'completed_at': None, 'meta_json': 'null', 'source_file_id': None, 'output_file_id': 161}
2025-10-09 14:03:06,528 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:03:06,528 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:03:06,548 - app.services.ai_recommendation_generator - INFO - ✅ [AI GENERATOR] AI recommendation generated and saved for Australia_for_UNHCR
2025-10-09 14:03:06,548 - app.services.ai_recommendation_generator - INFO - 📄 File: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation.json
2025-10-09 14:03:06,548 - app.services.ai_recommendation_generator - INFO - 💰 Cost: $0.0045
2025-10-09 14:03:06,548 - app.services.ai_recommendation_generator - INFO - 🔤 Tokens: 3495
2025-10-09 14:03:06,548 - app.services.ai_recommendation_generator - INFO - 🚀 [AI GENERATOR] Starting automatic CV tailoring for Australia_for_UNHCR
2025-10-09 14:03:06,549 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:06,550 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 14:03:06,551 - app.tailored_cv.services.cv_tailoring_service - INFO - Loading real data for Australia_for_UNHCR
2025-10-09 14:03:06,551 - app.tailored_cv.services.cv_tailoring_service - INFO - Company folder: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 14:03:06,552 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:06,552 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:06,552 - app.utils.user_path_utils - INFO - ✅ Ensured user directories exist: user/simran@gmail.com/cv-analysis
2025-10-09 14:03:06,553 - app.tailored_cv.services.cv_tailoring_service - INFO - 📄 [TAILORING] Using latest CV via unified selector → type=original, ts=None, path=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:03:06,553 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Loading CV from user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:03:06,554 - app.tailored_cv.services.cv_tailoring_service - INFO - - First 200 chars: {   "personal_information": {     "name": "Maheshwor Tiwari",     "phone": "+61-123-456-789",     "email": "maheshwor.tiwari@example.com",     "location": "Sydney, NSW, Australia",     "linkedin": "li
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO - 📂 Loading CV from: user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO - 📋 CV format check:
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO -   - Top-level keys: ['personal_information', 'career_profile', 'skills', 'education', 'experience', 'projects', 'certifications', 'languages', 'awards', 'publications', 'volunteer_work', 'professional_memberships', 'unknown_sections', 'original_sections', 'saved_at', 'metadata']
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO -   - Has metadata: True
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO -   - Source file: test_cv.pdf
2025-10-09 14:03:06,555 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing version: 2.0
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Detected structured CV format
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO - 📊 Structure overview:
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO -   - Skills sections: ['technical_skills', 'key_skills', 'soft_skills', 'domain_expertise']
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO -   - Experience entries: 2
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO -   - Education entries: 2
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO -   - Projects: 0
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO - 🔄 Starting structured CV conversion
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO - 📊 Input data validation:
2025-10-09 14:03:06,556 - app.tailored_cv.services.recommendation_parser - INFO - 👤 Converting contact information
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Source fields: ['name', 'phone', 'email', 'location', 'linkedin', 'github', 'portfolio_links', 'residency_status', 'open_to']
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Mapped fields: ['name', 'email', 'phone', 'location', 'linkedin', 'website']
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Contact completeness: 100.0%
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - LinkedIn: linkedin.com/in/maheshwor-tiwari
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Website: github.com/maheshwor-tiwari
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO - 💼 Converting experience entries
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Found 2 experience entries
2025-10-09 14:03:06,557 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing experience 1/2
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Company: iBuild Building Solutions
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Title: Data Analyst
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Duration:  to Present
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Bullets: 0
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing experience 2/2
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Company: Property Console
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Title: Data Insight Analyst
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Duration:  to Present
2025-10-09 14:03:06,558 - app.tailored_cv.services.recommendation_parser - INFO -     • Bullets: 0
2025-10-09 14:03:06,559 - app.tailored_cv.services.recommendation_parser - INFO - Converted 0 experience entries
2025-10-09 14:03:06,559 - app.tailored_cv.services.recommendation_parser - INFO - 🔧 Converting skills section
2025-10-09 14:03:06,559 - app.tailored_cv.services.recommendation_parser - INFO -   - Source skill categories: ['technical_skills', 'key_skills', 'soft_skills', 'domain_expertise']
2025-10-09 14:03:06,560 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing technical skills:
2025-10-09 14:03:06,560 - app.tailored_cv.services.recommendation_parser - INFO -     • Extracted 4 unique technical skills
2025-10-09 14:03:06,560 - app.tailored_cv.services.recommendation_parser - INFO -     • Skills: SQL, Python, Power BI, Data Analysis
2025-10-09 14:03:06,560 - app.tailored_cv.services.recommendation_parser - INFO - Converted 1 skill categories
2025-10-09 14:03:06,561 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Conversion complete - Validating output
2025-10-09 14:03:06,561 - app.tailored_cv.services.recommendation_parser - ERROR - ❌ No experience entries were converted
2025-10-09 14:03:06,561 - app.tailored_cv.services.recommendation_parser - INFO - ✓ Skills: 1 categories
2025-10-09 14:03:06,561 - app.tailored_cv.services.recommendation_parser - INFO -   • Technical Skills: 4 skills
2025-10-09 14:03:06,561 - app.tailored_cv.services.recommendation_parser - WARNING - ⚠️ Validation found 1 issues
2025-10-09 14:03:06,562 - app.tailored_cv.services.recommendation_parser - INFO - 🎓 Converting education entries
2025-10-09 14:03:06,562 - app.tailored_cv.services.recommendation_parser - INFO -   - Found 2 education entries
2025-10-09 14:03:06,562 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing education 1/2
2025-10-09 14:03:06,562 - app.tailored_cv.services.recommendation_parser - INFO -     • Institution: Charles Darwin University
2025-10-09 14:03:06,563 - app.tailored_cv.services.recommendation_parser - INFO -     • Degree: Master of Data Science
2025-10-09 14:03:06,563 - app.tailored_cv.services.recommendation_parser - INFO -     • Graduation date: 
2025-10-09 14:03:06,563 - app.tailored_cv.services.recommendation_parser - INFO -   - Processing education 2/2
2025-10-09 14:03:06,563 - app.tailored_cv.services.recommendation_parser - INFO -     • Institution: 
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO -     • Degree: Bachelor of Computer Science
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO -     • Graduation date: 
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO - Converted 2 education entries
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO - 📤 Returning converted CV data:
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO -   - Contact fields: ['name', 'email', 'phone', 'location', 'linkedin', 'website']
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO -   - Experience entries: 0
2025-10-09 14:03:06,564 - app.tailored_cv.services.recommendation_parser - INFO -   - Skill categories: 1
2025-10-09 14:03:06,565 - app.tailored_cv.services.recommendation_parser - INFO -   - Education entries: 2
2025-10-09 14:03:06,565 - app.tailored_cv.services.cv_tailoring_service - INFO - - Parsed CV data keys: ['contact', 'experience', 'skills', 'education']
2025-10-09 14:03:06,565 - app.tailored_cv.services.cv_tailoring_service - WARNING - ⚠️ [TAILORING] CV data is empty, checking for original_text fallback
2025-10-09 14:03:06,565 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Skills already in SkillCategory format
2025-10-09 14:03:06,565 - app.tailored_cv.services.cv_tailoring_service - WARNING - ⚠️ [TAILORING] CV data is incomplete, falling back to original CV
2025-10-09 14:03:06,566 - app.tailored_cv.services.cv_tailoring_service - INFO - - Final CV object attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 14:03:06,572 - app.tailored_cv.services.recommendation_parser - INFO - ✅ Parsed recommendation for Australia_for_UNHCR
2025-10-09 14:03:06,573 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded real CV and recommendation for Australia_for_UNHCR
2025-10-09 14:03:06,573 - app.tailored_cv.services.cv_tailoring_service - INFO - 🎯 Starting CV tailoring for Australia_for_UNHCR - Senior Data Analyst
2025-10-09 14:03:06,573 - app.tailored_cv.services.cv_tailoring_service - INFO - 🔍 [DEBUG] Validating CV structure:
2025-10-09 14:03:06,573 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV object type: <class 'app.tailored_cv.models.cv_models.OriginalCV'>
2025-10-09 14:03:06,574 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV attributes: ['__abstractmethods__', '__annotations__', '__class__', '__class_getitem__', '__class_vars__', '__copy__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__fields__', '__fields_set__', '__format__', '__ge__', '__get_pydantic_core_schema__', '__get_pydantic_json_schema__', '__getattr__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pretty__', '__private_attributes__', '__pydantic_complete__', '__pydantic_core_schema__', '__pydantic_custom_init__', '__pydantic_decorators__', '__pydantic_extra__', '__pydantic_fields_set__', '__pydantic_generic_metadata__', '__pydantic_init_subclass__', '__pydantic_parent_namespace__', '__pydantic_post_init__', '__pydantic_private__', '__pydantic_root_model__', '__pydantic_serializer__', '__pydantic_validator__', '__reduce__', '__reduce_ex__', '__repr__', '__repr_args__', '__repr_name__', '__repr_str__', '__rich_repr__', '__setattr__', '__setstate__', '__signature__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '__weakref__', '_abc_impl', '_calculate_keys', '_check_frozen', '_copy_and_set_values', '_get_value', '_iter', 'construct', 'contact', 'copy', 'created_at', 'dict', 'education', 'experience', 'experience_level', 'from_orm', 'json', 'model_computed_fields', 'model_config', 'model_construct', 'model_copy', 'model_dump', 'model_dump_json', 'model_extra', 'model_fields', 'model_fields_set', 'model_json_schema', 'model_parametrized_name', 'model_post_init', 'model_rebuild', 'model_validate', 'model_validate_json', 'model_validate_strings', 'parse_file', 'parse_obj', 'parse_raw', 'projects', 'schema', 'schema_json', 'skills', 'total_years_experience', 'update_forward_refs', 'updated_at', 'validate']
2025-10-09 14:03:06,574 - app.tailored_cv.services.cv_tailoring_service - INFO - - CV data: {
  "contact": {
    "name": "Maheshwor Tiwari",
    "phone": "+61-123-456-789",
    "email": "maheshwor.tiwari@example.com",
    "linkedin": "linkedin.com/in/maheshwor-tiwari",
    "location": "Sydney, NSW, Australia",
    "website": "github.com/maheshwor-tiwari"
  },
  "education": [
    {
      "institution": "Charles Darwin University",
      "degree": "Master of Data Science",
      "location": "Sydney, Australia",
      "graduation_date": "",
      "gpa": "",
      "relevant_coursework": [],
      "honors": []
    },
    {
      "institution": "",
      "degree": "Bachelor of Computer Science",
      "location": "",
      "graduation_date": "",
      "gpa": "",
      "relevant_coursework": [],
      "honors": []
    }
  ],
  "experience": [],
  "projects": null,
  "skills": [
    {
      "category": "Technical Skills",
      "skills": [
        "SQL",
        "Python",
        "Power BI",
        "Data Analysis"
      ]
    }
  ],
  "experience_level": null,
  "total_years_experience": null,
  "created_at": null,
  "updated_at": null
}
2025-10-09 14:03:06,574 - app.tailored_cv.services.cv_tailoring_service - ERROR - ❌ CV tailoring failed: CV validation failed. Fix these issues: experience: At least one experience entry is required
2025-10-09 14:03:06,575 - app.services.ai_recommendation_generator - ERROR - ❌ [AI GENERATOR] Error during automatic CV tailoring for Australia_for_UNHCR: CV tailoring process failed: CV validation failed. Fix these issues: experience: At least one experience entry is required
2025-10-09 14:03:06,575 - app.services.ai_recommendation_generator - WARNING - ⚠️ [AI GENERATOR] CV tailoring failed for Australia_for_UNHCR
2025-10-09 14:03:06,575 - app.routes.skills_analysis - INFO - ✅ [PIPELINE] AI recommendation generated for Australia_for_UNHCR
2025-10-09 14:03:06,575 - app.routes.skills_analysis - INFO - 🎯 [PIPELINE] Starting tailored CV generation for Australia_for_UNHCR
2025-10-09 14:03:06,575 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:06,575 - app.tailored_cv.services.cv_tailoring_service - INFO - ✅ Loaded CV optimization framework from /Users/mahesh/Documents/Github/cv-new/cv-magic-app/backend/app/tailored_cv/prompts/framework.md
2025-10-09 14:03:06,576 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:06,577 - app.routes.skills_analysis - INFO - 📄 [PIPELINE] Found AI recommendation file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_140306.json
2025-10-09 14:03:06,578 - app.routes.skills_analysis - WARNING - ⚠️ [PIPELINE] No tailored CV found for Australia_for_UNHCR
2025-10-09 14:03:06,578 - app.routes.skills_analysis - INFO - 📋 [PIPELINE] Pipeline summary for Australia_for_UNHCR:
2025-10-09 14:03:06,578 - app.routes.skills_analysis - INFO -    ✅ Successful: ['jd_analysis', 'cv_jd_matching', 'component_analysis', 'input_recommendation', 'ai_recommendation']
2025-10-09 14:03:06,578 - app.routes.skills_analysis - INFO -    ❌ Failed: ['tailored_cv']
2025-10-09 14:03:06,579 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 14:03:06,580 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_140306.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_140257.json); skipping regeneration
2025-10-09 14:03:06,581 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
2025-10-09 14:03:06,581 - app.services.ai_recommendation_generator - INFO - 🤖 [AI GENERATOR] Starting AI recommendation generation for: Australia_for_UNHCR
2025-10-09 14:03:06,581 - app.services.ai_recommendation_generator - INFO - 🟢 [AI GENERATOR] Latest AI recommendation (Australia_for_UNHCR_ai_recommendation_20251009_140306.json) is up-to-date vs input (Australia_for_UNHCR_input_recommendation_20251009_140257.json); skipping regeneration
2025-10-09 14:03:06,581 - app.services.ats_recommendation_service - INFO - ✅ [TRIGGER] AI recommendation generated successfully for Australia_for_UNHCR
INFO:     Shutting down
INFO:     Waiting for application shutdown.
2025-10-09 14:03:06,684 - app.main - INFO - ⏹️ Shutting down CV Management API...
INFO:     Application shutdown complete.
INFO:     Finished server process [33901]
🔍 Searching for latest CV across tailored+original for company: Australia_for_UNHCR
🧭 [UNIFIED] CV candidates before sort:
  - type=original, ts=00000000_000000, mtime=1759978917.8267567, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json
📄 [UNIFIED] Latest CV resolved → type=original, ts=00000000_000000, json=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.json, txt=user/simran@gmail.com/cv-analysis/cvs/original/original_cv.txt
No AI providers auto-configured - user must select provider and configure API keys via frontend
INFO:     Started server process [40627]
INFO:     Waiting for application startup.
2025-10-09 14:03:11,843 - app.main - INFO - 🚀 Starting CV Management API...
🔧 Development mode: JWT expiration set to 480 minutes
2025-10-09 14:03:12,163 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2025-10-09 14:03:12,163 - sqlalchemy.engine.Engine - INFO - select pg_catalog.version()
2025-10-09 14:03:12,163 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 14:03:12,163 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 14:03:12,206 INFO sqlalchemy.engine.Engine select current_schema()
2025-10-09 14:03:12,206 - sqlalchemy.engine.Engine - INFO - select current_schema()
2025-10-09 14:03:12,206 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 14:03:12,206 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 14:03:12,244 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2025-10-09 14:03:12,244 - sqlalchemy.engine.Engine - INFO - show standard_conforming_strings
2025-10-09 14:03:12,245 INFO sqlalchemy.engine.Engine [raw sql] {}
2025-10-09 14:03:12,245 - sqlalchemy.engine.Engine - INFO - [raw sql] {}
2025-10-09 14:03:12,288 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:03:12,288 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:03:12,288 INFO sqlalchemy.engine.Engine SELECT 1
2025-10-09 14:03:12,288 - sqlalchemy.engine.Engine - INFO - SELECT 1
2025-10-09 14:03:12,288 INFO sqlalchemy.engine.Engine [generated in 0.00080s] {}
2025-10-09 14:03:12,288 - sqlalchemy.engine.Engine - INFO - [generated in 0.00080s] {}
2025-10-09 14:03:12,322 INFO sqlalchemy.engine.Engine ROLLBACK
2025-10-09 14:03:12,322 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-10-09 14:03:12,340 - app.database - INFO - Database connection successful
2025-10-09 14:03:12,341 - app.main - INFO - ✅ Database connection successful
2025-10-09 14:03:12,358 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2025-10-09 14:03:12,358 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-10-09 14:03:12,364 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,364 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,364 INFO sqlalchemy.engine.Engine [generated in 0.00043s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,364 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] {'table_name': 'users', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,405 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,405 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,405 INFO sqlalchemy.engine.Engine [cached since 0.04165s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,405 - sqlalchemy.engine.Engine - INFO - [cached since 0.04165s ago] {'table_name': 'user_sessions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,427 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,427 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,427 INFO sqlalchemy.engine.Engine [cached since 0.06371s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,427 - sqlalchemy.engine.Engine - INFO - [cached since 0.06371s ago] {'table_name': 'cvs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,447 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,447 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,447 INFO sqlalchemy.engine.Engine [cached since 0.08401s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,447 - sqlalchemy.engine.Engine - INFO - [cached since 0.08401s ago] {'table_name': 'job_applications', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,467 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,467 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,467 INFO sqlalchemy.engine.Engine [cached since 0.1041s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,467 - sqlalchemy.engine.Engine - INFO - [cached since 0.1041s ago] {'table_name': 'cv_analyses', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,485 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,485 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,486 INFO sqlalchemy.engine.Engine [cached since 0.1222s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,486 - sqlalchemy.engine.Engine - INFO - [cached since 0.1222s ago] {'table_name': 'job_comparisons', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,510 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,510 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,510 INFO sqlalchemy.engine.Engine [cached since 0.1465s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,510 - sqlalchemy.engine.Engine - INFO - [cached since 0.1465s ago] {'table_name': 'companies', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,534 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,534 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,535 INFO sqlalchemy.engine.Engine [cached since 0.1713s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,535 - sqlalchemy.engine.Engine - INFO - [cached since 0.1713s ago] {'table_name': 'company_files', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,560 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,560 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,560 INFO sqlalchemy.engine.Engine [cached since 0.1966s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,560 - sqlalchemy.engine.Engine - INFO - [cached since 0.1966s ago] {'table_name': 'analysis_runs', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,584 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,584 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,584 INFO sqlalchemy.engine.Engine [cached since 0.2209s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,584 - sqlalchemy.engine.Engine - INFO - [cached since 0.2209s ago] {'table_name': 'cv_versions', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,607 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,607 - sqlalchemy.engine.Engine - INFO - SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = %(table_name)s AND pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
2025-10-09 14:03:12,607 INFO sqlalchemy.engine.Engine [cached since 0.2435s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,607 - sqlalchemy.engine.Engine - INFO - [cached since 0.2435s ago] {'table_name': 'user_api_keys', 'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog'}
2025-10-09 14:03:12,630 INFO sqlalchemy.engine.Engine COMMIT
2025-10-09 14:03:12,630 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-10-09 14:03:12,660 - app.database - INFO - Database tables created successfully
2025-10-09 14:03:12,660 - app.main - INFO - ✅ Database tables ready
2025-10-09 14:03:12,661 - app.main - INFO - 🎯 API Server started successfully on 0.0.0.0:8000
2025-10-09 14:03:12,661 - app.main - INFO - ✅ User directories will be created on-demand during login
INFO:     Application startup complete.
INFO:     127.0.0.1:60275 - "OPTIONS /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 14:03:12,672 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 14:03:12,673 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:12,673 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 14:03:12,674 - app.utils.path_debug - INFO -   📂 User base dir: user/simran@gmail.com/cv-analysis
2025-10-09 14:03:12,674 - app.utils.path_debug - INFO -   📂 Company dir: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 14:03:12,678 - app.utils.path_debug - INFO -   📂 Using analysis file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:03:12,679 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 30233 bytes
INFO:     127.0.0.1:60275 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 14:03:26,652 - app.routes.skills_analysis - INFO - 📊 [API] Fetching analysis results for company: Australia_for_UNHCR
2025-10-09 14:03:26,655 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:26,656 - app.utils.path_debug - INFO - 
📌 Starting get_analysis_results
2025-10-09 14:03:26,656 - app.utils.path_debug - INFO -   📂 User base dir: user/simran@gmail.com/cv-analysis
2025-10-09 14:03:26,656 - app.utils.path_debug - INFO -   📂 Company dir: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 14:03:26,656 - app.utils.path_debug - INFO -   📂 Using analysis file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_skills_analysis_20251009_140221.json
2025-10-09 14:03:26,658 - app.utils.path_debug - INFO -   ✅ Loaded analysis file, size: 30233 bytes
INFO:     127.0.0.1:60283 - "GET /api/analysis-results/Australia_for_UNHCR HTTP/1.1" 200 OK
INFO:     127.0.0.1:60311 - "OPTIONS /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
2025-10-09 14:03:49,071 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Fetching for company: Australia_for_UNHCR, user: simran@gmail.com
2025-10-09 14:03:49,071 - app.utils.user_path_utils - INFO - ✅ User base path (preferred): user/simran@gmail.com/cv-analysis for simran@gmail.com
2025-10-09 14:03:49,071 - app.routes.ai_recommendations - INFO - 🔍 [AI_RECOMMENDATIONS] Searching in: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR
2025-10-09 14:03:49,071 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Found file: user/simran@gmail.com/cv-analysis/applied_companies/Australia_for_UNHCR/Australia_for_UNHCR_ai_recommendation_20251009_140306.json
2025-10-09 14:03:49,072 - app.routes.ai_recommendations - INFO - ✅ [AI_RECOMMENDATIONS] Successfully loaded recommendation, content length: 3833
Auth attempt with token: eyJhbGciOiJIUzI1NiIs...
✅ Auth successful for user: simran@gmail.com
INFO:     127.0.0.1:60311 - "GET /api/ai-recommendations/company/Australia_for_UNHCR HTTP/1.1" 200 OK
