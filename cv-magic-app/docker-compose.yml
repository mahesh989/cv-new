version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv_backend
    env_file:
      - ./backend/.env
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - DEVELOPMENT_MODE=false
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://mahesh:password123@postgres:5432/cv_app
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=cv_app
      - DATABASE_USER=mahesh
      - DATABASE_PASSWORD=password123
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - user_data:/app/user
    expose:
      - "8000"

  postgres:
    image: postgres:15-alpine
    container_name: cv_postgres
    environment:
      - POSTGRES_DB=cv_app
      - POSTGRES_USER=mahesh
      - POSTGRES_PASSWORD=password123
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mahesh -d cv_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cv_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:stable-alpine
    container_name: cv_nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  pg_data:
  redis_data:
  user_data:
