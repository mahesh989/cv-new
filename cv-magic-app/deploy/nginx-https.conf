# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name cvagent.duckdns.org;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name cvagent.duckdns.org;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/cvagent.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cvagent.duckdns.org/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Increase proxy buffers for larger JSON bodies
    proxy_buffering off;
    client_max_body_size 20m;

    location / {
        proxy_pass http://backend:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Optional: serve docs directly
    location /docs {
        proxy_pass http://backend:8000/docs;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
    }

    location /health {
        proxy_pass http://backend:8000/health;
    }
}
